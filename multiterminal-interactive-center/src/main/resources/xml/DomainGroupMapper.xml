<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.panda.multiterminalinteractivecenter.mapper.DomainGroupMapper">

    <resultMap id="BaseResultMap" type="com.panda.multiterminalinteractivecenter.entity.DomainGroup">
        <result column="id" property="id"/>
        <result column="domain_group_name" property="domainGroupName"/>
        <result column="group_type" property="groupType"/>
        <result column="domainNum" property="domainNum"/>
        <result column="domain" property="domain"/>
        <result column="h5_threshold" property="h5Threshold"/>
        <result column="pc_threshold" property="pcThreshold"/>
        <result column="api_threshold" property="apiThreshold"/>
        <result column="img_threshold" property="imgThreshold"/>
        <result column="exclusive_type" property="exclusiveType"/>
        <result column="belong_area" property="belongArea"/>
        <result column="user_value" property="userValue"/>
        <result column="status" property="status"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="last_updated" property="lastUpdated"/>
        <result column="domainIds" property="domainIds"/>
        <result column="programId" property="programId"/>
        <result column="programName" property="programName"/>
        <result column="tab" property="tab"/>
        <result column="del_tag" property="delTag"/>

    </resultMap>

    <sql id="Base_Column_List">
        tdg.id,
        tdg.domain_group_name,
        tdg.group_type,
        tdg.h5_threshold,
        tdg.pc_threshold,
        tdg.api_threshold,
        tdg.img_threshold,
        tdg.exclusive_type,
        tdg.belong_area,
        tdg.user_value,
        tdg.status,
        tdg.create_time,
        tdg.update_time,
        tdg.tab,
        tdg.del_tag,
        tdg.last_updated
    </sql>

    <insert id="insert" useGeneratedKeys="true" keyColumn="id" keyProperty="id"
            parameterType="com.panda.multiterminalinteractivecenter.entity.DomainGroup">
        INSERT INTO t_domain_group
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="null != domainGroupName and '' != domainGroupName">
                domain_group_name,
            </if>
            <if test="null != groupType and '' != groupType">
                group_type,
            </if>
            <if test="null != exclusiveType and '' != exclusiveType">
                exclusive_type,
            </if>
            <if test="null != belongProgram and '' != belongProgram">
                belong_program,
            </if>
            <if test="null != belongArea and '' != belongArea">
                belong_area,
            </if>
            <if test="null != userValue and '' != userValue">
                user_value,
            </if>
            <if test="null != createTime and '' != createTime">
                create_time,
            </if>

            <if test="null != tab and '' != tab">
                tab,
            </if>

            <if test="null != updateTime and '' != updateTime">
                update_time,
            </if>

            <if test="null != lastUpdated and '' != lastUpdated">
                last_updated
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="null != domainGroupName and '' != domainGroupName">
                #{domainGroupName},
            </if>
            <if test="null != groupType and '' != groupType">
                #{groupType},
            </if>
            <if test="null != exclusiveType and '' != exclusiveType">
                #{exclusiveType},
            </if>
            <if test="null != belongProgram and '' != belongProgram">
                #{belongProgram},
            </if>
            <if test="null != belongArea and '' != belongArea">
                #{belongArea},
            </if>
            <if test="null != userValue and '' != userValue">
                #{userValue},
            </if>
            <if test="null != createTime and '' != createTime">
                #{createTime},
            </if>
            <if test="null != tab and '' != tab">
                #{tab},
            </if>

            <if test="null != updateTime and '' != updateTime">
                #{updateTime},
            </if>

            <if test="null != lastUpdated and '' != lastUpdated">
                #{lastUpdated}
            </if>
        </trim>
    </insert>

    <delete id="delete">
        DELETE
        FROM t_domain_group
        WHERE id = #{id}
          AND del_tag = 0
    </delete>

    <delete id="deleteByGroupId">
        DELETE
        FROM t_domain_group_relation
        WHERE domain_group_id = #{id}
    </delete>

    <delete id="deleteByDomainId">
        DELETE
        FROM t_domain_group_relation
        WHERE
        domain_group_id = #{groupId}
        <if test="null != tab and '' != tab">
            AND tab = #{tab}
        </if>
        AND domain_id IN
        <foreach collection="ids" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <delete id="deleteByDomainIds">
        DELETE
        FROM t_domain_group_relation
        WHERE
        domain_group_id = #{groupId}
        <if test="null != tab and '' != tab">
            AND tab = #{tab}
        </if>
    </delete>

    <update id="update" parameterType="com.panda.multiterminalinteractivecenter.entity.DomainGroup">
        UPDATE t_domain_group
        <set>
            <if test="null != domainGroupName and '' != domainGroupName">domain_group_name = #{domainGroupName},</if>
            <if test="null != groupType and '' != groupType">group_type = #{groupType},</if>
            <if test="null != belongProgram and '' != belongProgram">belong_program = #{belongProgram},</if>
            <if test="null != belongArea and '' != belongArea">belong_area = #{belongArea},</if>
            <if test="null != userValue and '' != userValue">user_value = #{userValue},</if>
            <if test="null != status and '' != status">status = #{status},</if>
            <if test="null != h5Threshold and '' != h5Threshold">h5_threshold = #{h5Threshold},</if>
            <if test="null != pcThreshold and '' != pcThreshold">pc_threshold = #{pcThreshold},</if>
            <if test="null != apiThreshold and '' != apiThreshold">api_threshold = #{apiThreshold},</if>
            <if test="null != imgThreshold and '' != imgThreshold">img_threshold = #{imgThreshold},</if>
            <if test="null != updateTime and '' != updateTime">update_time = #{updateTime}</if>
        </set>
        WHERE id = #{id}
    </update>


    <select id="pageList" resultMap="BaseResultMap"
            parameterType="com.panda.multiterminalinteractivecenter.vo.DomainGroupVO">
        SELECT
        <include refid="Base_Column_List"/>
        ,GROUP_CONCAT(distinct td.id) AS domainIds
        ,GROUP_CONCAT(distinct td.domain_name) AS `domain`
        ,count(distinct td.id) AS domainNum
        ,GROUP_CONCAT(distinct re.program_id) AS programId
        ,GROUP_CONCAT(distinct po.program_name) AS programName
        FROM t_domain_group tdg
        LEFT JOIN t_domain_group_relation dgr ON dgr.domain_group_id = tdg.id
        LEFT JOIN
        <if test="null != tab and 'ty' == tab">
            t_domain_ty
        </if>
        <if test="null != tab and 'ty' != tab">
            t_domain
        </if>
            td on td.id = dgr.domain_id
        LEFT JOIN t_domain_program_relation re ON re.domain_group_id = tdg.id
        LEFT JOIN t_domain_program po ON re.program_id = po.id
        WHERE 1 = 1
        <if test="domainGroupName != '' and domainGroupName != null">
            and tdg.domain_group_name like CONCAT('%',#{domainGroupName},'%')
        </if>

        <if test="groupType != '' and groupType != null">
            and tdg.group_type = #{groupType}
        </if>

        <if test="exclusiveType != '' and exclusiveType != null">
            and tdg.exclusive_type = #{exclusiveType}
        </if>

        <if test="id != '' and id != null">
            and tdg.id = #{id}
        </if>
        <if test="programId != '' and programId != null">
            and po.id = #{programId}
        </if>
        <if test="belongProgram != '' and belongProgram != null">
            and po.id = #{belongProgram}
        </if>
        <if test="status != '' and status != null">
            and tdg.status = #{status}
        </if>
        <if test="null != tab and '' != tab">
            and tdg.tab = #{tab}
        </if>
        GROUP BY tdg.id
        LIMIT #{starNum}, #{pageSize}
    </select>

    <select id="pageListCount" resultType="java.lang.Integer"
            parameterType="com.panda.multiterminalinteractivecenter.vo.DomainGroupVO">
        SELECT count(1)
        FROM (
        SELECT
        <include refid="Base_Column_List"/>
        FROM t_domain_group tdg
        LEFT JOIN t_domain_group_relation dgr ON dgr.domain_group_id = tdg.id
        LEFT JOIN
        <if test="null != tab and 'ty' == tab">
            t_domain_ty
        </if>
        <if test="null != tab and 'ty' != tab">
            t_domain
        </if>
            td on td.id = dgr.domain_id
        LEFT JOIN t_domain_program_relation re ON re.domain_group_id = tdg.id
        LEFT JOIN t_domain_program po ON re.program_id = po.id
        WHERE 1 = 1
        <if test="domainGroupName != '' and domainGroupName != null">
            and tdg.domain_group_name like CONCAT('%',#{domainGroupName},'%')
        </if>

        <if test="groupType != '' and groupType != null">
            and tdg.group_type = #{groupType}
        </if>

        <if test="id != '' and id != null">
            and tdg.id = #{id}
        </if>
        <if test="programId != '' and programId != null">
            and po.id = #{programId}
        </if>
        <if test="belongProgram != '' and belongProgram != null">
            and po.id = #{programId}
        </if>
        <if test="null != tab and '' != tab">
            and tdg.tab = #{tab}
        </if>
        GROUP BY tdg.id
        ) aa
    </select>

    <select id="getDomainGroupById" resultType="com.panda.multiterminalinteractivecenter.vo.DomainGroupVO"
            parameterType="com.panda.multiterminalinteractivecenter.vo.DomainGroupVO">
        SELECT
        <include refid="Base_Column_List"/>
        ,td.domain_type
        ,GROUP_CONCAT(distinct td.id) AS domainIds,GROUP_CONCAT(distinct td.domain_name) AS domain,
        COUNT(distinct td.id) AS domainNum
        FROM t_domain_group tdg
        LEFT JOIN t_domain_group_relation dgr ON dgr.domain_group_id = tdg.id
        LEFT JOIN
        <if test="null != tab and 'ty' == tab">
            t_domain_ty
        </if>
        <if test="null != tab and 'ty' != tab">
            t_domain
        </if>
            td on td.id = dgr.domain_id
        WHERE tdg.id = #{id}
            and td.enable in(1,2)
        <if test="null != tab and '' != tab">
            and tdg.tab = #{tab}
        </if>
        GROUP BY tdg.id
    </select>

    <update id="batchUpdateByDomainGroupId" parameterType="java.util.List">
        UPDATE t_domain_group_relation
        SET domain_group_id = #{domainGroupId}
        WHERE domain_id IN
        <foreach collection="ids" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>

    </update>

    <insert id="batchSaveDomainGroupRelation" parameterType="java.util.List">
        insert into t_domain_group_relation
        (
        domain_group_id
        ,domain_id
        ,create_time
        ,update_time
        ,last_updated
        ,tab
        )
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.domainGroupId}
            ,#{item.domainId}
            ,#{item.createTime}
            ,#{item.updateTime}
            ,#{item.lastUpdated}
            ,#{item.tab}
            )
        </foreach>
    </insert>


    <select id="findProgramDownDomainGroupList" resultMap="BaseResultMap">
        SELECT
        tdg.id,
        tdg.domain_group_name,
        tdg.group_type,
        tdg.h5_threshold h5Threshold,
        tdg.pc_threshold pcThreshold,
        tdg.api_threshold apiThreshold,
        tdg.img_threshold imgThreshold,
        tdg.exclusive_type,
        tdg.belong_area,
        tdg.user_value,
        tdg.status,
        tdg.last_updated
        ,COUNT(td.id) AS domainNum
        ,po.id programId
        ,po.update_time
        FROM t_domain_group tdg
        LEFT JOIN t_domain_group_relation dgr ON dgr.domain_group_id = tdg.id
        LEFT JOIN
        <if test="null != tab and 'ty' == tab">
            t_domain_ty
        </if>
        <if test="null != tab and 'ty' != tab">
            t_domain
        </if>
            td ON td.id = dgr.domain_id
        LEFT JOIN t_domain_program po ON po.id = #{id}
        <where>
            <if test="groupType != '' and groupType != null">
                and tdg.group_type = #{groupType}
            </if>
            <if test="null != tab and '' != tab">
                and tdg.tab = #{tab}
            </if>
            <if test="id != '' and id != null">
                and tdg.id IN(SELECT domain_group_id FROM t_domain_program_relation WHERE program_id = #{id})
            </if>
        </where>

        GROUP BY tdg.id
    </select>

    <select id="getDomainTree" resultType="com.panda.multiterminalinteractivecenter.vo.DomainVO">
        SELECT
        tdty.id,
        tdty.domain_type domainType,
        CASE
        WHEN tdty.domain_type = 1 THEN
        "h5域名"
        WHEN tdty.domain_type = 2 THEN
        "PC域名"
        WHEN tdty.domain_type = 3 THEN
        "App域名"
        WHEN tdty.domain_type = 4 THEN
        "图片域名"
        WHEN tdty.domain_type = 5 THEN
        "其他域名"
        END AS `domainName`,
        tdty.line_carrier_id lineCarrierId,
        tl.line_carrier_name lineCarrierName,
        tdty.domain_name `domain`
        FROM
        <if test="null != domainVO.tab and 'ty' == domainVO.tab">
            t_domain_ty
        </if>
        <if test="null != domainVO.tab and 'ty' != domainVO.tab">
            t_domain
        </if> tdty
        LEFT JOIN t_line_carrier tl on tdty.line_carrier_id = tl.id
        LEFT JOIN t_domain_group_relation tdgr on tdty.id = tdgr.domain_id
        WHERE
        tdty.line_carrier_id IS NOT NULL
        and tdty.status = 1
        and tdty.line_carrier_id != 0
        <if test="domainVO.lineCarrierId != '' and domainVO.lineCarrierId != null">
            AND tdty.line_carrier_id = #{domainVO.lineCarrierId}
        </if>
        <if test="domainVO.domainGroupId != '' and domainVO.domainGroupId != null">
            AND tdgr.domain_group_id = #{domainVO.domainGroupId}
        </if>
        <if test="null != domainVO.tab and '' != domainVO.tab">
            and tdty.tab = #{domainVO.tab}
        </if>
        <if test="null != domainVO.groupType and '' != domainVO.groupType">
            and tdty.group_type = #{domainVO.groupType}
        </if>
        <if test="null != domainVO.domainType and '' != domainVO.domainType">
            and tdty.domain_type = #{domainVO.domainType}
        </if>
        <if test="null != domainVO.domainName and '' != domainVO.domainName">
            and tdty.domain_name like CONCAT('%',#{domainVO.domainName},'%')
        </if>
        <if test="null != domainVO.excludeDomainId and '' != domainVO.excludeDomainId">
            and tdty.id != #{domainVO.excludeDomainId}
        </if>
        <if test="null != domainVO.excludeUsedDomain and true == domainVO.excludeUsedDomain">
            AND tdty.id not in (SELECT DISTINCT(domain_id) FROM t_domain_group_relation WHERE tab = #{domainVO.tab})
        </if>
        <if test="null != domainVO.excludeDomainIdList and domainVO.excludeDomainIdList.size() > 0">
            and tdty.id not in
            <foreach item='item' index='index' collection='domainVO.excludeDomainIdList'
                     open='(' separator=',' close=')'>
                #{item}
            </foreach>
        </if>
        GROUP BY
        tdty.line_carrier_id,
        tdty.domain_name

    </select>

    <select id="getLineCarrierName" resultType="java.lang.String">
        SELECT
        line_carrier_name
        FROM t_line_carrier
        WHERE
        1 = 1
        <if test="lineCarrierId != '' and lineCarrierId != null">
            AND id = #{lineCarrierId}
        </if>
    </select>

    <select id="checkAreaDomainGroup" resultType="java.lang.Integer">
        SELECT
        count(1)
        FROM t_domain_group
        WHERE 1 = 1
        <if test="areaId != '' and areaId != null">
            AND belong_area = #{areaId}
        </if>
        <if test="groupType != '' and groupType != null">
            AND group_type = #{groupType}
        </if>
        <if test="null != tab and '' != tab">
            and tab = #{tab}
        </if>
    </select>

    <select id="getDomainGroupByIds" resultType="com.panda.multiterminalinteractivecenter.vo.DomainGroupVO">
        SELECT
        <include refid="Base_Column_List"/>
        ,GROUP_CONCAT(distinct td.id) AS domainIds,GROUP_CONCAT(distinct td.domain_name) AS domain,
        COUNT(distinct td.id) AS domainNum
        FROM t_domain_group tdg
        LEFT JOIN t_domain_group_relation dgr ON dgr.domain_group_id = tdg.id
        LEFT JOIN
        <if test="null != tab and 'ty' == tab">
            t_domain_ty
        </if>
        <if test="null != tab and 'ty' != tab">
            t_domain
        </if>
        td on td.id = dgr.domain_id
        WHERE 1 = 1
        AND tdg.id in
        <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
            '${item}'
        </foreach>

        <if test="null != tab and '' != tab">
            AND tdg.tab = #{tab}
        </if>
        GROUP BY tdg.id
    </select>
    <select id="getDomainGroupType" resultType="java.lang.String">
        SELECT
            CASE WHEN td.exclusive_type = 2 THEN "VIP"
                 WHEN td.belong_area = 0 THEN "默认"
                 WHEN td.exclusive_type = 1 THEN
                     ( SELECT ma.NAME FROM merchant.m_domain_area ma WHERE ma.id = td.belong_area )
                END AS areaName
        FROM
            merchant.t_domain_group td
                LEFT JOIN merchant.t_domain_group_relation dr ON td.id = dr.domain_group_id
        WHERE
            dr.domain_id = #{domainId};
    </select>

    <select id="findDomainExist" resultType="com.panda.multiterminalinteractivecenter.dto.DomainDTO2">
        SELECT domain_id domainId ,
               count(1)>0 existOtherGroup,
               group_concat(domain_group_id) groupIdStr
        FROM `t_domain_group_relation`
        where tab = #{tab}
        <if test="null != domainGroupId and '' != domainGroupId">
            and domain_group_id != #{domainGroupId}
        </if>
        group by domain_id
    </select>

    <select id="selectSimpleAll" resultType="com.panda.multiterminalinteractivecenter.dto.DomainGroupDTO">
        SELECT id , domain_group_name domainGroupName
        FROM `t_domain_group`
        where tab = #{tab}
    </select>

</mapper>