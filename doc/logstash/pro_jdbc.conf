input {
    stdin {}
    jdbc {
        jdbc_connection_string => "jdbc:mysql://10.5.11.80:6606/tybss_report?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
        jdbc_user => "tybss_web"
        jdbc_password => "A2Vox11@CznA2X%8LeXxqvCmy"
        jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        connection_retry_attempts => "3"
        jdbc_validate_connection => "true"
        jdbc_validation_timeout => "3600"
        jdbc_paging_enabled => "true"
        jdbc_page_size => "1000"
        codec => plain { charset => "UTF-8"}
        use_column_value => true
        tracking_column => updatedTime
        tracking_column_type => "numeric"
        sql_log_level => error
        record_last_run => true
        lowercase_column_names => false
        last_run_metadata_path => "/usr/local/logstash/spring/sql/r_user_order_day_last_id.txt"
        jdbc_default_timezone => "Asia/Shanghai"
        statement_filepath => "/usr/local/logstash/spring/sql/r_user_order_day.sql"
        clean_run => false
        schedule => "/8 * * * *"
        type => "r_user_order_day"
    }
    jdbc {
        jdbc_connection_string => "jdbc:mysql://10.5.11.80:6606/tybss_report?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
        jdbc_user => "tybss_web"
        jdbc_password => "A2Vox11@CznA2X%8LeXxqvCmy"
        jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        connection_retry_attempts => "3"
        jdbc_validate_connection => "true"
        jdbc_validation_timeout => "3600"
        jdbc_paging_enabled => "true"
        jdbc_page_size => "1000"
        codec => plain { charset => "UTF-8"}
        use_column_value => true
        tracking_column => updatedTime
        tracking_column_type => "numeric"
        sql_log_level => error
        record_last_run => true
        lowercase_column_names => false
        last_run_metadata_path => "/usr/local/logstash/spring/sql/r_user_order_day_utc8_last_id.txt"
        jdbc_default_timezone => "Asia/Shanghai"
        statement_filepath => "/usr/local/logstash/spring/sql/r_user_order_day_utc8.sql"
        clean_run => false
        schedule => "/6 * * * *"
        type => "r_user_order_day_utc8"
    }

    jdbc {
        jdbc_connection_string => "jdbc:mysql://10.5.11.80:6606/tybss_report?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
        jdbc_user => "tybss_web"
        jdbc_password => "A2Vox11@CznA2X%8LeXxqvCmy"
        jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        connection_retry_attempts => "3"
        jdbc_validate_connection => "true"
        jdbc_validation_timeout => "3600"
        jdbc_paging_enabled => "true"
        jdbc_page_size => "1000"
        lowercase_column_names => false
        codec => plain { charset => "UTF-8"}
        use_column_value => true
        tracking_column => updatedTime
        tracking_column_type => "numeric"
        sql_log_level => error
        record_last_run => true
        last_run_metadata_path => "/usr/local/logstash/spring/sql/r_user_order_month_last_id.txt"
        jdbc_default_timezone => "Asia/Shanghai"
        statement_filepath => "/usr/local/logstash/spring/sql/r_user_order_month.sql"
        clean_run => false
        schedule => "/10 * * * *"
        type => "r_user_order_month"
    }
    jdbc {
        jdbc_connection_string => "jdbc:mysql://10.5.11.80:6606/tybss_report?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
        jdbc_user => "tybss_web"
        jdbc_password => "A2Vox11@CznA2X%8LeXxqvCmy"
        jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        connection_retry_attempts => "3"
        jdbc_validate_connection => "true"
        jdbc_validation_timeout => "3600"
        jdbc_paging_enabled => "true"
        jdbc_page_size => "1000"
        lowercase_column_names => false
        codec => plain { charset => "UTF-8"}
        use_column_value => true
        tracking_column => updatedTime
        tracking_column_type => "numeric"
        sql_log_level => error
        record_last_run => true
        last_run_metadata_path => "/usr/local/logstash/spring/sql/r_user_order_month_utc8_last_id.txt"
        jdbc_default_timezone => "Asia/Shanghai"
        statement_filepath => "/usr/local/logstash/spring/sql/r_user_order_month_utc8.sql"
        clean_run => false
        schedule => "/10 * * * *"
        type => "r_user_order_month_utc8"
    }
    jdbc {
        jdbc_connection_string => "jdbc:mysql://10.5.11.80:6606/tybss_report?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
        jdbc_user => "tybss_web"
        jdbc_password => "A2Vox11@CznA2X%8LeXxqvCmy"
        jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        connection_retry_attempts => "3"
        jdbc_validate_connection => "true"
        jdbc_validation_timeout => "3600"
        jdbc_paging_enabled => "true"
        jdbc_page_size => "1000"
        codec => plain { charset => "UTF-8"}
        lowercase_column_names => false
        use_column_value => true
        tracking_column => updatedTime
        tracking_column_type => "numeric"
        sql_log_level => error
        record_last_run => true
        last_run_metadata_path => "/usr/local/logstash/spring/sql/r_user_sport_order_day_last_id.txt"
        jdbc_default_timezone => "Asia/Shanghai"
        statement_filepath => "/usr/local/logstash/spring/sql/r_user_sport_order_day.sql"
        clean_run => false
        schedule => "/10 * * * *"
        type => "r_user_sport_order_day"
    }
    jdbc {
        jdbc_connection_string => "jdbc:mysql://10.5.11.80:6606/tybss_report?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
        jdbc_user => "tybss_web"
        jdbc_password => "A2Vox11@CznA2X%8LeXxqvCmy"
        jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        connection_retry_attempts => "3"
        jdbc_validate_connection => "true"
        jdbc_validation_timeout => "3600"
        jdbc_paging_enabled => "true"
        jdbc_page_size => "1000"
        codec => plain { charset => "UTF-8"}
        lowercase_column_names => false
        use_column_value => true
        tracking_column => updatedTime
        tracking_column_type => "numeric"
        sql_log_level => error
        record_last_run => true
        last_run_metadata_path => "/usr/local/logstash/spring/sql/r_user_sport_order_day_utc8_last_id.txt"
        jdbc_default_timezone => "Asia/Shanghai"
        statement_filepath => "/usr/local/logstash/spring/sql/r_user_sport_order_day_utc8.sql"
        clean_run => false
        schedule => "/10 * * * *"
        type => "r_user_sport_order_day_utc8"
    }
    jdbc {
        jdbc_connection_string => "jdbc:mysql://10.5.11.80:6606/tybss_report?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
        jdbc_user => "tybss_web"
        jdbc_password => "A2Vox11@CznA2X%8LeXxqvCmy"
        jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        connection_retry_attempts => "3"
        jdbc_validate_connection => "true"
        jdbc_validation_timeout => "3600"
        jdbc_paging_enabled => "true"
        jdbc_page_size => "1000"
        codec => plain { charset => "UTF-8"}
        lowercase_column_names => false
        use_column_value => true
        tracking_column => updatedTime
        tracking_column_type => "numeric"
        sql_log_level => error
        record_last_run => true
        last_run_metadata_path => "/usr/local/logstash/spring/sql/r_user_sport_order_month_last_id.txt"
        jdbc_default_timezone => "Asia/Shanghai"
        statement_filepath => "/usr/local/logstash/spring/sql/r_user_sport_order_month.sql"
        clean_run => false
        schedule => "/10 * * * *"
        type => "r_user_sport_order_month"
    }
    jdbc {
        jdbc_connection_string => "jdbc:mysql://10.5.11.80:6606/tybss_report?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
        jdbc_user => "tybss_web"
        jdbc_password => "A2Vox11@CznA2X%8LeXxqvCmy"
        jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        connection_retry_attempts => "3"
        jdbc_validate_connection => "true"
        jdbc_validation_timeout => "3600"
        jdbc_paging_enabled => "true"
        jdbc_page_size => "1000"
        codec => plain { charset => "UTF-8"}
        lowercase_column_names => false
        use_column_value => true
        tracking_column => updatedTime
        tracking_column_type => "numeric"
        sql_log_level => error
        record_last_run => true
        last_run_metadata_path => "/usr/local/logstash/spring/sql/r_user_sport_order_month_utc8_last_id.txt"
        jdbc_default_timezone => "Asia/Shanghai"
        statement_filepath => "/usr/local/logstash/spring/sql/r_user_sport_order_month_utc8.sql"
        clean_run => false
        schedule => "/10 * * * *"
        type => "r_user_sport_order_month_utc8"
    }

    jdbc {
        jdbc_connection_string => "jdbc:mysql://10.5.11.80:6606/tybss_report?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
        jdbc_user => "tybss_web"
        jdbc_password => "A2Vox11@CznA2X%8LeXxqvCmy"
        jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        connection_retry_attempts => "3"
        jdbc_validate_connection => "true"
        jdbc_validation_timeout => "3600"
        jdbc_paging_enabled => "true"
        jdbc_page_size => "1000"
        lowercase_column_names => false
        codec => plain { charset => "UTF-8"}
        use_column_value => true
        tracking_column => updatedTime
        tracking_column_type => "numeric"
        sql_log_level => error
        record_last_run => true
        last_run_metadata_path => "/usr/local/logstash/spring/sql/r_merchant_order_day_last_id.txt"
        jdbc_default_timezone => "Asia/Shanghai"
        statement_filepath => "/usr/local/logstash/spring/sql/r_merchant_order_day.sql"
        clean_run => false
        schedule => "/5 * * * *"
        type => "r_merchant_order_day"
    }
    jdbc {
        jdbc_connection_string => "jdbc:mysql://10.5.11.80:6606/tybss_report?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
        jdbc_user => "tybss_web"
        jdbc_password => "A2Vox11@CznA2X%8LeXxqvCmy"
        jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        connection_retry_attempts => "3"
        jdbc_validate_connection => "true"
        jdbc_validation_timeout => "3600"
        jdbc_paging_enabled => "true"
        jdbc_page_size => "1000"
        lowercase_column_names => false
        codec => plain { charset => "UTF-8"}
        use_column_value => true
        tracking_column => updatedTime
        tracking_column_type => "numeric"
        sql_log_level => error
        record_last_run => true
        last_run_metadata_path => "/usr/local/logstash/spring/sql/r_merchant_order_day_utc8_last_id.txt"
        jdbc_default_timezone => "Asia/Shanghai"
        statement_filepath => "/usr/local/logstash/spring/sql/r_merchant_order_day_utc8.sql"
        clean_run => false
        schedule => "/5 * * * *"
        type => "r_merchant_order_day_utc8"
    }
    jdbc {
        jdbc_connection_string => "jdbc:mysql://10.5.11.80:6606/tybss_report?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
        jdbc_user => "tybss_web"
        jdbc_password => "A2Vox11@CznA2X%8LeXxqvCmy"
        jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        connection_retry_attempts => "3"
        jdbc_validate_connection => "true"
        jdbc_validation_timeout => "3600"
        jdbc_paging_enabled => "true"
        jdbc_page_size => "1000"
        lowercase_column_names => false
        codec => plain { charset => "UTF-8"}
        use_column_value => true
        tracking_column => updatedTime
        tracking_column_type => "numeric"
        sql_log_level => error
        record_last_run => true
        last_run_metadata_path => "/usr/local/logstash/spring/sql/r_merchant_order_month_last_id.txt"
        jdbc_default_timezone => "Asia/Shanghai"
        statement_filepath => "/usr/local/logstash/spring/sql/r_merchant_order_month.sql"
        clean_run => false
        schedule => "/5 * * * *"
        type => "r_merchant_order_month"
    }
    jdbc {
        jdbc_connection_string => "jdbc:mysql://10.5.11.80:6606/tybss_report?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
        jdbc_user => "tybss_web"
        jdbc_password => "A2Vox11@CznA2X%8LeXxqvCmy"
        jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        connection_retry_attempts => "3"
        jdbc_validate_connection => "true"
        jdbc_validation_timeout => "3600"
        jdbc_paging_enabled => "true"
        jdbc_page_size => "1000"
        lowercase_column_names => false
        codec => plain { charset => "UTF-8"}
        use_column_value => true
        tracking_column => updatedTime
        tracking_column_type => "numeric"
        sql_log_level => error
        record_last_run => true
        last_run_metadata_path => "/usr/local/logstash/spring/sql/r_merchant_order_month_utc8_last_id.txt"
        jdbc_default_timezone => "Asia/Shanghai"
        statement_filepath => "/usr/local/logstash/spring/sql/r_merchant_order_month_utc8.sql"
        clean_run => false
        schedule => "/5 * * * *"
        type => "r_merchant_order_month_utc8"
    }
    jdbc {
        jdbc_connection_string => "jdbc:mysql://10.5.11.80:6606/tybss_report?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
        jdbc_user => "tybss_web"
        jdbc_password => "A2Vox11@CznA2X%8LeXxqvCmy"
        jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        connection_retry_attempts => "3"
        jdbc_validate_connection => "true"
        jdbc_validation_timeout => "3600"
        jdbc_paging_enabled => "true"
        jdbc_page_size => "1000"
        lowercase_column_names => false
        codec => plain { charset => "UTF-8"}
        use_column_value => true
        tracking_column => updatedTime
        tracking_column_type => "numeric"
        sql_log_level => error
        record_last_run => true
        last_run_metadata_path => "/usr/local/logstash/spring/sql/r_merchant_sport_order_day_last_id.txt"
        jdbc_default_timezone => "Asia/Shanghai"
        statement_filepath => "/usr/local/logstash/spring/sql/r_merchant_sport_order_day.sql"
        clean_run => false
        schedule => "/10 * * * *"
        type => "r_merchant_sport_order_day"
    }
    jdbc {
        jdbc_connection_string => "jdbc:mysql://10.5.11.80:6606/tybss_report?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
        jdbc_user => "tybss_web"
        jdbc_password => "A2Vox11@CznA2X%8LeXxqvCmy"
        jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        connection_retry_attempts => "3"
        jdbc_validate_connection => "true"
        jdbc_validation_timeout => "3600"
        jdbc_paging_enabled => "true"
        jdbc_page_size => "1000"
        lowercase_column_names => false
        codec => plain { charset => "UTF-8"}
        use_column_value => true
        tracking_column => updatedTime
        tracking_column_type => "numeric"
        sql_log_level => error
        record_last_run => true
        last_run_metadata_path => "/usr/local/logstash/spring/sql/r_merchant_sport_order_day_utc8_last_id.txt"
        jdbc_default_timezone => "Asia/Shanghai"
        statement_filepath => "/usr/local/logstash/spring/sql/r_merchant_sport_order_day_utc8.sql"
        clean_run => false
        schedule => "/10 * * * *"
        type => "r_merchant_sport_order_day_utc8"
    }
    jdbc {
        jdbc_connection_string => "jdbc:mysql://10.5.11.80:6606/tybss_report?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
        jdbc_user => "tybss_web"
        jdbc_password => "A2Vox11@CznA2X%8LeXxqvCmy"
        jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        connection_retry_attempts => "3"
        jdbc_validate_connection => "true"
        jdbc_validation_timeout => "3600"
        jdbc_paging_enabled => "true"
        jdbc_page_size => "2000"
        codec => plain { charset => "UTF-8"}
        lowercase_column_names => false
        use_column_value => true
        tracking_column => updatedTime
        tracking_column_type => "numeric"
        sql_log_level => error
        record_last_run => true
        last_run_metadata_path => "/usr/local/logstash/spring/sql/r_merchant_sport_order_month_last_id.txt"
        jdbc_default_timezone => "Asia/Shanghai"
        statement_filepath => "/usr/local/logstash/spring/sql/r_merchant_sport_order_month.sql"
        clean_run => false
        schedule => "/10 * * * *"
        type => "r_merchant_sport_order_month"
    }
    jdbc {
        jdbc_connection_string => "jdbc:mysql://10.5.11.80:6606/tybss_report?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
        jdbc_user => "tybss_web"
        jdbc_password => "A2Vox11@CznA2X%8LeXxqvCmy"
        jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        connection_retry_attempts => "3"
        jdbc_validate_connection => "true"
        jdbc_validation_timeout => "3600"
        jdbc_paging_enabled => "true"
        jdbc_page_size => "2000"
        codec => plain { charset => "UTF-8"}
        lowercase_column_names => false
        use_column_value => true
        tracking_column => updatedTime
        tracking_column_type => "numeric"
        sql_log_level => error
        record_last_run => true
        last_run_metadata_path => "/usr/local/logstash/spring/sql/r_merchant_sport_order_month_utc8_last_id.txt"
        jdbc_default_timezone => "Asia/Shanghai"
        statement_filepath => "/usr/local/logstash/spring/sql/r_merchant_sport_order_month_utc8.sql"
        clean_run => false
        schedule => "/10 * * * *"
        type => "r_merchant_sport_order_month_utc8"
    }
    jdbc {
        jdbc_connection_string => "jdbc:mysql://10.5.11.80:6606/tybss_report?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
        jdbc_user => "tybss_web"
        jdbc_password => "A2Vox11@CznA2X%8LeXxqvCmy"
        jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        connection_retry_attempts => "3"
        jdbc_validate_connection => "true"
        jdbc_validation_timeout => "3600"
        jdbc_paging_enabled => "true"
        jdbc_page_size => "2000"
        codec => plain { charset => "UTF-8"}
        use_column_value => true
        tracking_column => updatedTime
        tracking_column_type => "numeric"
        sql_log_level => error
        record_last_run => true
        lowercase_column_names => false
        last_run_metadata_path => "/usr/local/logstash/spring/sql/r_market_bet_info_last_id.txt"
        jdbc_default_timezone => "Asia/Shanghai"
        statement_filepath => "/usr/local/logstash/spring/sql/r_market_bet_info.sql"
        clean_run => false
        schedule => "/10 * * * *"
        type => "r_market_bet_info"
    }
    jdbc {
        jdbc_connection_string => "jdbc:mysql://10.5.11.80:6606/tybss_report?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
        jdbc_user => "tybss_web"
        jdbc_password => "A2Vox11@CznA2X%8LeXxqvCmy"
        jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        connection_retry_attempts => "3"
        jdbc_validate_connection => "true"
        jdbc_validation_timeout => "3600"
        jdbc_paging_enabled => "true"
        jdbc_page_size => "2000"
        codec => plain { charset => "UTF-8"}
        lowercase_column_names => false
        use_column_value => true
        tracking_column => updatedTime
        tracking_column_type => "numeric"
        sql_log_level => error
        record_last_run => true
        last_run_metadata_path => "/usr/local/logstash/spring/sql/r_match_bet_info_last_id.txt"
        jdbc_default_timezone => "Asia/Shanghai"
        statement_filepath => "/usr/local/logstash/spring/sql/r_match_bet_info.sql"
        clean_run => false
        schedule => "/10 * * * *"
        type => "r_match_bet_info"
    }
    jdbc {
        jdbc_connection_string => "jdbc:mysql://10.5.11.80:6606/tybss_report?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
        jdbc_user => "tybss_web"
        jdbc_password => "A2Vox11@CznA2X%8LeXxqvCmy"
        jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        connection_retry_attempts => "3"
        jdbc_validate_connection => "true"
        jdbc_validation_timeout => "3600"
        jdbc_paging_enabled => "true"
        jdbc_page_size => "2000"
        codec => plain { charset => "UTF-8"}
        lowercase_column_names => false
        use_column_value => true
        tracking_column => updatedTime
        tracking_column_type => "numeric"
        sql_log_level => error
        record_last_run => true
        last_run_metadata_path => "/usr/local/logstash/spring/sql/r_merchant_match_bet_info_last_id.txt"
        jdbc_default_timezone => "Asia/Shanghai"
        statement_filepath => "/usr/local/logstash/spring/sql/r_merchant_match_bet_info.sql"
        clean_run => false
        schedule => "/10 * * * *"
        type => "r_merchant_match_bet_info"
    }
    jdbc {
        jdbc_connection_string => "jdbc:mysql://10.5.11.80:6606/tybss_report?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
        jdbc_user => "tybss_web"
        jdbc_password => "A2Vox11@CznA2X%8LeXxqvCmy"
        jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        connection_retry_attempts => "3"
        jdbc_validate_connection => "true"
        jdbc_validation_timeout => "3600"
        jdbc_paging_enabled => "true"
        jdbc_page_size => "2000"
        codec => plain { charset => "UTF-8"}
        lowercase_column_names => false
        use_column_value => true
        tracking_column => updatedTime
        tracking_column_type => "numeric"
        sql_log_level => error
        record_last_run => true
        last_run_metadata_path => "/usr/local/logstash/spring/sql/r_merchant_market_bet_info_last_id.txt"
        jdbc_default_timezone => "Asia/Shanghai"
        statement_filepath => "/usr/local/logstash/spring/sql/r_merchant_market_bet_info.sql"
        clean_run => false
        schedule => "/10 * * * *"
        type => "r_merchant_market_bet_info"
    }
	jdbc {
		jdbc_connection_string => "jdbc:mysql://10.5.11.80:6606/tybss_report?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
		jdbc_user => "tybss_web"
		jdbc_password => "A2Vox11@CznA2X%8LeXxqvCmy"
		jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
		connection_retry_attempts => "3"
		jdbc_validate_connection => "true"
		jdbc_validation_timeout => "3600"
		jdbc_paging_enabled => "true"
		jdbc_page_size => "6000"
		codec => plain { charset => "UTF-8"}
		lowercase_column_names => false
		use_column_value => true
		tracking_column => "modifyTime"
		tracking_column_type => "numeric"
		record_last_run => true
		last_run_metadata_path => "/usr/local/logstash/spring/sql/merge_ticket_es_last_id.txt"
		jdbc_default_timezone => "Asia/Shanghai"
		statement_filepath => "/usr/local/logstash/spring/sql/merge_ticket_es.sql"
		clean_run => false
		schedule => "/5 * * * *"
		type => "merge_ticket_es"
	}
	jdbc {
      jdbc_connection_string => "jdbc:mysql://10.5.11.86:6526/tybss_merchant_common?tinyInt1isBit=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
      jdbc_user => "jsread"
      jdbc_password => "t7nNcP43G38g09vr6RqB"
      jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
      jdbc_validation_timeout => "3600"
      connection_retry_attempts => "3"
      jdbc_paging_enabled => "true"
      jdbc_page_size => "5000"
      codec => plain { charset => "UTF-8"}
      use_column_value => true
      tracking_column => modify_time
      tracking_column_type => "numeric"
      record_last_run => true
      last_run_metadata_path => "/usr/local/logstash/spring/sql/merge_order_c_last_id.txt"
      jdbc_default_timezone => "Asia/Shanghai"
      statement_filepath => "/usr/local/logstash/spring/sql/merge_order.sql"
      clean_run => false
      schedule => "/3 * * * *"
	  type => "merge_order_c"
    }
	jdbc {
      jdbc_connection_string => "jdbc:mysql://10.5.11.86:6526/tybss_merchant_common?tinyInt1isBit=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
      jdbc_user => "jsread"
      jdbc_password => "t7nNcP43G38g09vr6RqB"
      jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
      jdbc_validation_timeout => "3600"
      connection_retry_attempts => "3"
      jdbc_paging_enabled => "true"
      jdbc_page_size => "5000"
      codec => plain { charset => "UTF-8"}
      use_column_value => true
      tracking_column => modify_time
      tracking_column_type => "numeric"
      record_last_run => true
      last_run_metadata_path => "/usr/local/logstash/spring/sql/merge_order_bak_last_id.txt"
      jdbc_default_timezone => "Asia/Shanghai"
      statement_filepath => "/usr/local/logstash/spring/sql/merge_order_bak.sql"
      clean_run => false
      schedule => "/6 * * * *"
	  type => "merge_order_bak"
    }

	jdbc {
      jdbc_connection_string => "jdbc:mysql://10.5.11.86:6526/tybss_merchant_common?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true&tinyInt1isBit=false"
      jdbc_user => "jsread"
      jdbc_password => "t7nNcP43G38g09vr6RqB"
      jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
      jdbc_validation_timeout => "3600"
      connection_retry_attempts => "3"
      jdbc_paging_enabled => "true"
      jdbc_page_size => "5000"
      codec => plain { charset => "UTF-8"}
      use_column_value => true
      tracking_column => modify_time
      tracking_column_type => "numeric"
      record_last_run => true
      last_run_metadata_path => "/usr/local/logstash/spring/sql/merge_order_detail_last_id.txt"
      jdbc_default_timezone => "Asia/Shanghai"
      statement_filepath => "/usr/local/logstash/spring/sql/merge_order_detail.sql"
      clean_run => false
      schedule => "/3 * * * *"
	  type => "merge_order_detail"
    }

	jdbc {
      jdbc_connection_string => "jdbc:mysql://10.5.11.86:6526/tybss_merchant_common?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true&tinyInt1isBit=false"
      jdbc_user => "jsread"
      jdbc_password => "t7nNcP43G38g09vr6RqB"
      jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
      jdbc_validation_timeout => "3600"
      connection_retry_attempts => "3"
      jdbc_paging_enabled => "true"
      jdbc_page_size => "5000"
      codec => plain { charset => "UTF-8"}
      use_column_value => true
      tracking_column => create_time
      tracking_column_type => "numeric"
      record_last_run => true
      last_run_metadata_path => "/usr/local/logstash/spring/sql/merge_order_detail_c_bak_last_id.txt"
      jdbc_default_timezone => "Asia/Shanghai"
      statement_filepath => "/usr/local/logstash/spring/sql/merge_order_detail_bak.sql"
      clean_run => false
      schedule => "/7 * * * *"
	  type => "merge_order_detail_c_bak"
    }

	jdbc {
      jdbc_connection_string => "jdbc:mysql://10.5.11.59:6726/tybss_merchant_y?tinyInt1isBit=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
      jdbc_user => "jsread"
      jdbc_password => "t7nNcP43G38g09vr6RqB"
      #jdbc_driver_library => "E:\mysql-connector-java-5.1.48.jar"
      jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
      jdbc_validation_timeout => "3600"
      connection_retry_attempts => "3"
      jdbc_paging_enabled => "true"
      jdbc_page_size => "5000"
      codec => plain { charset => "UTF-8"}
      use_column_value => true
      tracking_column => modify_time
      tracking_column_type => "numeric"
      record_last_run => true
      last_run_metadata_path => "/usr/local/logstash/spring/sql/merge_order_y_last_id.txt"
      jdbc_default_timezone => "Asia/Shanghai"
      statement_filepath => "/usr/local/logstash/spring/sql/merge_order.sql"
      clean_run => false
      schedule => "/3 * * * *"
	  type => "merge_order_y"
    }

	jdbc {
      jdbc_connection_string => "jdbc:mysql://10.5.11.59:6726/tybss_merchant_y?tinyInt1isBit=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
      jdbc_user => "jsread"
      jdbc_password => "t7nNcP43G38g09vr6RqB"
      jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
      jdbc_validation_timeout => "3600"
      connection_retry_attempts => "3"
      jdbc_paging_enabled => "true"
      jdbc_page_size => "5000"
      codec => plain { charset => "UTF-8"}
      use_column_value => true
      tracking_column => modify_time
      tracking_column_type => "numeric"
      record_last_run => true
      last_run_metadata_path => "/usr/local/logstash/spring/sql/merge_order_y_bak_last_id.txt"
      jdbc_default_timezone => "Asia/Shanghai"
      statement_filepath => "/usr/local/logstash/spring/sql/merge_order_bak.sql"
      clean_run => false
      schedule => "/9 * * * *"
	  type => "merge_order_y_bak"
    }

	jdbc {
      jdbc_connection_string => "jdbc:mysql://10.5.11.59:6726/tybss_merchant_y?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
      jdbc_user => "jsread"
      jdbc_password => "t7nNcP43G38g09vr6RqB"
      #jdbc_driver_library => "E:\mysql-connector-java-5.1.48.jar"
      jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
      jdbc_validation_timeout => "3600"
      connection_retry_attempts => "3"
      jdbc_paging_enabled => "true"
      jdbc_page_size => "5000"
      codec => plain { charset => "UTF-8"}
      use_column_value => true
      tracking_column => modify_time
      tracking_column_type => "numeric"
      record_last_run => true
      last_run_metadata_path => "/usr/local/logstash/spring/sql/merge_order_detail_y_last_id.txt"
      jdbc_default_timezone => "Asia/Shanghai"
      statement_filepath => "/usr/local/logstash/spring/sql/merge_order_detail.sql"
      clean_run => false
      schedule => "/3 * * * *"
	  type => "merge_order_detail_y"
    }

	jdbc {
      jdbc_connection_string => "jdbc:mysql://10.5.11.59:6726/tybss_merchant_y?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
      jdbc_user => "jsread"
      jdbc_password => "t7nNcP43G38g09vr6RqB"
      #jdbc_driver_library => "E:\mysql-connector-java-5.1.48.jar"
      jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
      jdbc_validation_timeout => "3600"
      connection_retry_attempts => "3"
      jdbc_paging_enabled => "true"
      jdbc_page_size => "5000"
      codec => plain { charset => "UTF-8"}
      use_column_value => true
      tracking_column => create_time
      tracking_column_type => "numeric"
      record_last_run => true
      last_run_metadata_path => "/usr/local/logstash/spring/sql/merge_order_detail_y_bak_last_id.txt"
      jdbc_default_timezone => "Asia/Shanghai"
      statement_filepath => "/usr/local/logstash/spring/sql/merge_order_detail_bak.sql"
      clean_run => false
      schedule => "/7 * * * *"
	  type => "merge_order_detail_y_bak"
    }

	jdbc {
      jdbc_connection_string => "jdbc:mysql://10.5.11.79:6926/tybss_merchant_s?tinyInt1isBit=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
      jdbc_user => "jsread"
      jdbc_password => "t7nNcP43G38g09vr6RqB"
      #jdbc_driver_library => "E:\mysql-connector-java-5.1.48.jar"
      jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
      jdbc_validation_timeout => "3600"
      connection_retry_attempts => "3"
      jdbc_paging_enabled => "true"
      jdbc_page_size => "5000"
      codec => plain { charset => "UTF-8"}
      use_column_value => true
      tracking_column => modify_time
      tracking_column_type => "numeric"
      record_last_run => true
      last_run_metadata_path => "/usr/local/logstash/spring/sql/merge_order_s_last_id.txt"
      jdbc_default_timezone => "Asia/Shanghai"
      statement_filepath => "/usr/local/logstash/spring/sql/merge_order.sql"
      clean_run => false
      schedule => "/3 * * * *"
	  type => "merge_order_s"
    }

	jdbc {
      jdbc_connection_string => "jdbc:mysql://10.5.11.79:6926/tybss_merchant_s?tinyInt1isBit=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
      jdbc_user => "jsread"
      jdbc_password => "t7nNcP43G38g09vr6RqB"
      jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
      jdbc_validation_timeout => "3600"
      connection_retry_attempts => "3"
      jdbc_paging_enabled => "true"
      jdbc_page_size => "5000"
      codec => plain { charset => "UTF-8"}
      use_column_value => true
      tracking_column => modify_time
      tracking_column_type => "numeric"
      record_last_run => true
      last_run_metadata_path => "/usr/local/logstash/spring/sql/merge_order_s_bak_last_id.txt"
      jdbc_default_timezone => "Asia/Shanghai"
      statement_filepath => "/usr/local/logstash/spring/sql/merge_order_bak.sql"
      clean_run => false
      schedule => "/6 * * * *"
	  type => "merge_order_s_bak"
    }

	jdbc {
      jdbc_connection_string => "jdbc:mysql://10.5.11.79:6926/tybss_merchant_s?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
      jdbc_user => "jsread"
      jdbc_password => "t7nNcP43G38g09vr6RqB"
      #jdbc_driver_library => "E:\mysql-connector-java-5.1.48.jar"
      jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
      jdbc_validation_timeout => "3600"
      connection_retry_attempts => "3"
      jdbc_paging_enabled => "true"
      jdbc_page_size => "5000"
      codec => plain { charset => "UTF-8"}
      use_column_value => true
      tracking_column => modify_time
      tracking_column_type => "numeric"
      record_last_run => true
      last_run_metadata_path => "/usr/local/logstash/spring/sql/merge_order_detail_s_last_id.txt"
      jdbc_default_timezone => "Asia/Shanghai"
      statement_filepath => "/usr/local/logstash/spring/sql/merge_order_detail.sql"
      clean_run => false
      schedule => "/3 * * * *"
	  type => "merge_order_detail_s"
    }

	jdbc {
      jdbc_connection_string => "jdbc:mysql://10.5.11.79:6926/tybss_merchant_s?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
      jdbc_user => "jsread"
      jdbc_password => "t7nNcP43G38g09vr6RqB"
      #jdbc_driver_library => "E:\mysql-connector-java-5.1.48.jar"
      jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
      jdbc_validation_timeout => "3600"
      connection_retry_attempts => "3"
      jdbc_paging_enabled => "true"
      jdbc_page_size => "5000"
      codec => plain { charset => "UTF-8"}
      use_column_value => true
      tracking_column => create_time
      tracking_column_type => "numeric"
      record_last_run => true
      last_run_metadata_path => "/usr/local/logstash/spring/sql/merge_order_detail_s_bak_last_id.txt"
      jdbc_default_timezone => "Asia/Shanghai"
      statement_filepath => "/usr/local/logstash/spring/sql/merge_order_detail_bak.sql"
      clean_run => false
      schedule => "/7 * * * *"
	  type => "merge_order_detail_s_bak"
    }

	jdbc {
      jdbc_connection_string => "jdbc:mysql://10.5.11.71:6826/tybss_merchant_b?tinyInt1isBit=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
      jdbc_user => "jsread"
      jdbc_password => "t7nNcP43G38g09vr6RqB"
      #jdbc_driver_library => "E:\mysql-connector-java-5.1.48.jar"
      jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
      jdbc_validation_timeout => "3600"
      connection_retry_attempts => "3"
      jdbc_paging_enabled => "true"
      jdbc_page_size => "5000"
      codec => plain { charset => "UTF-8"}
      use_column_value => true
      tracking_column => modify_time
      tracking_column_type => "numeric"
      record_last_run => true
      last_run_metadata_path => "/usr/local/logstash/spring/sql/merge_order_b_last_id.txt"
      jdbc_default_timezone => "Asia/Shanghai"
      statement_filepath => "/usr/local/logstash/spring/sql/merge_order.sql"
      clean_run => false
      schedule => "/3 * * * *"
	  type => "merge_order_b"
    }

	jdbc {
      jdbc_connection_string => "jdbc:mysql://10.5.11.71:6826/tybss_merchant_b?tinyInt1isBit=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
      jdbc_user => "jsread"
      jdbc_password => "t7nNcP43G38g09vr6RqB"
      #jdbc_driver_library => "E:\mysql-connector-java-5.1.48.jar"
      jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
      jdbc_validation_timeout => "3600"
      connection_retry_attempts => "3"
      jdbc_paging_enabled => "true"
      jdbc_page_size => "5000"
      codec => plain { charset => "UTF-8"}
      use_column_value => true
      tracking_column => modify_time
      tracking_column_type => "numeric"
      record_last_run => true
      last_run_metadata_path => "/usr/local/logstash/spring/sql/merge_order_b_bak_last_id.txt"
      jdbc_default_timezone => "Asia/Shanghai"
      statement_filepath => "/usr/local/logstash/spring/sql/merge_order_bak.sql"
      clean_run => false
      schedule => "/6 * * * *"
	  type => "merge_order_b_bak"
    }

	jdbc {
      jdbc_connection_string => "jdbc:mysql://10.5.11.71:6826/tybss_merchant_b?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
      jdbc_user => "jsread"
      jdbc_password => "t7nNcP43G38g09vr6RqB"
      #jdbc_driver_library => "E:\mysql-connector-java-5.1.48.jar"
      jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
      jdbc_validation_timeout => "3600"
      connection_retry_attempts => "3"
      jdbc_paging_enabled => "true"
      jdbc_page_size => "5000"
      codec => plain { charset => "UTF-8"}
      use_column_value => true
      tracking_column => modify_time
      tracking_column_type => "numeric"
      record_last_run => true
      last_run_metadata_path => "/usr/local/logstash/spring/sql/merge_order_detail_b_last_id.txt"
      jdbc_default_timezone => "Asia/Shanghai"
      statement_filepath => "/usr/local/logstash/spring/sql/merge_order_detail.sql"
      clean_run => false
      schedule => "/3 * * * *"
	  type => "merge_order_detail_b"
    }

	jdbc {
      jdbc_connection_string => "jdbc:mysql://10.5.11.71:6826/tybss_merchant_b?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
      jdbc_user => "jsread"
      jdbc_password => "t7nNcP43G38g09vr6RqB"
      #jdbc_driver_library => "E:\mysql-connector-java-5.1.48.jar"
      jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
      jdbc_validation_timeout => "3600"
      connection_retry_attempts => "3"
      jdbc_paging_enabled => "true"
      jdbc_page_size => "5000"
      codec => plain { charset => "UTF-8"}
      use_column_value => true
      tracking_column => create_time
      tracking_column_type => "numeric"
      record_last_run => true
      last_run_metadata_path => "/usr/local/logstash/spring/sql/merge_order_detail_b_bak_last_id.txt"
      jdbc_default_timezone => "Asia/Shanghai"
      statement_filepath => "/usr/local/logstash/spring/sql/merge_order_detail_bak.sql"
      clean_run => false
      schedule => "/7 * * * *"
	  type => "merge_order_detail_b_bak"
    }

	jdbc {
		jdbc_connection_string => "jdbc:mysql://10.5.11.73:6636/tybss_new?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true&tinyInt1isBit=false"
		jdbc_user => "jsread"
		jdbc_password => "t7nNcP43G38g09vr6RqB"
		jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
		connection_retry_attempts => "3"
		jdbc_validate_connection => "true"
		jdbc_validation_timeout => "3600"
		jdbc_paging_enabled => "true"
		jdbc_page_size => "10000"
		codec => plain { charset => "UTF-8"}
		lowercase_column_names => false
		use_column_value => true
		tracking_column => modify_time
		tracking_column_type => "numeric"
		record_last_run => true
		last_run_metadata_path => "/usr/local/logstash/spring/sql/s_match_info_last_id.txt"
		jdbc_default_timezone => "Asia/Shanghai"
		statement_filepath => "/usr/local/logstash/spring/sql/s_match_info.sql"
		clean_run => false
		schedule => "/4 * * * *"
		type => "s_match_info"
	}
	jdbc {
		jdbc_connection_string => "jdbc:mysql://10.5.11.73:6636/tybss_new?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true&tinyInt1isBit=false"
		jdbc_user => "jsread"
		jdbc_password => "t7nNcP43G38g09vr6RqB"
		jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
		connection_retry_attempts => "3"
		jdbc_validate_connection => "true"
		jdbc_validation_timeout => "3600"
		jdbc_paging_enabled => "true"
		jdbc_page_size => "10000"
		codec => plain { charset => "UTF-8"}
		lowercase_column_names => false
		use_column_value => true
		tracking_column => modify_time
		tracking_column_type => "numeric"
		record_last_run => true
		last_run_metadata_path => "/usr/local/logstash/spring/sql/s_virtual_match_info_last_id.txt"
		jdbc_default_timezone => "Asia/Shanghai"
		statement_filepath => "/usr/local/logstash/spring/sql/s_virtual_match_info.sql"
		clean_run => false
		schedule => "/4 * * * *"
		type => "s_virtual_match_info"
	}
	jdbc {
		jdbc_connection_string => "jdbc:mysql://10.5.11.73:6636/tybss_new?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true&tinyInt1isBit=false"
		jdbc_user => "jsread"
		jdbc_password => "t7nNcP43G38g09vr6RqB"
		jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
		connection_retry_attempts => "3"
		jdbc_validate_connection => "true"
		jdbc_validation_timeout => "3600"
		jdbc_paging_enabled => "true"
		jdbc_page_size => "10000"
		codec => plain { charset => "UTF-8"}
		lowercase_column_names => false
		use_column_value => true
		tracking_column => modify_time
		tracking_column_type => "numeric"
		record_last_run => true
		last_run_metadata_path => "/usr/local/logstash/spring/sql/s_esports_match_info_last_id.txt"
		jdbc_default_timezone => "Asia/Shanghai"
		statement_filepath => "/usr/local/logstash/spring/sql/s_esports_match_info.sql"
		clean_run => false
		schedule => "/4 * * * *"
		type => "s_esports_match_info"
	}
}

filter {
    json {
        source => "message"
        remove_field => ["message"]
    }
    mutate {
        convert => ["profit", "float"]
        convert => ["profitRate", "float"]
        convert => ["settleProfit", "float"]
        convert => ["settleProfitRate", "float"]
    }
}

output {
    if[type] == "r_market_bet_info" {
        elasticsearch {
            hosts => "10.5.18.241:9200"
            index => "market_bet_info"
            document_type => "doc"
            document_id => "%{id}"
        }
    }
    if[type] == "r_match_bet_info" {
        elasticsearch {
            hosts => "10.5.18.241:9200"
            index => "match_bet_info"
            document_type => "doc"
            document_id => "%{id}"
        }
    }

    if[type] == "r_user_order_day" {
        elasticsearch {
            hosts => "10.5.18.241:9200"
            index => "user_order_day"
            document_type => "doc"
            document_id => "%{id}"
        }
    }
    if[type] == "r_user_order_day_utc8" {
        elasticsearch {
            hosts => "10.5.18.241:9200"
            index => "user_order_day_utc8"
            document_type => "doc"
            document_id => "%{id}"
        }
    }
    if[type] == "r_user_order_month" {
        elasticsearch {
            hosts => "10.5.18.241:9200"
            index => "user_order_month"
            document_type => "doc"
            document_id => "%{id}"
        }
    }
    if[type] == "r_user_order_month_utc8" {
        elasticsearch {
            hosts => "10.5.18.241:9200"
            index => "user_order_month_utc8"
            document_type => "doc"
            document_id => "%{id}"
        }
    }

    if[type] == "r_user_sport_order_day" {
        elasticsearch {
            hosts => "10.5.18.241:9200"
            index => "user_sport_order_day"
            document_type => "doc"
            document_id => "%{id}"
        }
    }
    if[type] == "r_user_sport_order_day_utc8" {
        elasticsearch {
            hosts => "10.5.18.241:9200"
            index => "user_sport_order_day_utc8"
            document_type => "doc"
            document_id => "%{id}"
        }
    }
    if[type] == "r_user_sport_order_month" {
        elasticsearch {
            hosts => "10.5.18.241:9200"
            index => "user_sport_order_month"
            document_type => "doc"
            document_id => "%{id}"
        }
    }
    if[type] == "r_user_sport_order_month_utc8" {
        elasticsearch {
            hosts => "10.5.18.241:9200"
            index => "user_sport_order_month_utc8"
            document_type => "doc"
            document_id => "%{id}"
        }
    }

    if[type] == "r_merchant_order_day" {
        elasticsearch {
            hosts => "10.5.18.241:9200"
            index => "merchant_order_day"
            document_type => "doc"
            document_id => "%{id}"
        }
    }
    if[type] == "r_merchant_order_day_utc8" {
        elasticsearch {
            hosts => "10.5.18.241:9200"
            index => "merchant_order_day_utc8"
            document_type => "doc"
            document_id => "%{id}"
        }
    }
    if[type] == "r_merchant_order_month" {
        elasticsearch {
            hosts => "10.5.18.241:9200"
            index => "merchant_order_month"
            document_type => "doc"
            document_id => "%{id}"
        }
    }
    if[type] == "r_merchant_order_month_utc8" {
        elasticsearch {
            hosts => "10.5.18.241:9200"
            index => "merchant_order_month_utc8"
            document_type => "doc"
            document_id => "%{id}"
        }
    }

    if[type] == "r_merchant_sport_order_day" {
        elasticsearch {
            hosts => "10.5.18.241:9200"
            index => "merchant_sport_order_day"
            document_type => "doc"
            document_id => "%{id}"
        }
    }
    if[type] == "r_merchant_sport_order_day_utc8" {
        elasticsearch {
            hosts => "10.5.18.241:9200"
            index => "merchant_sport_order_day_utc8"
            document_type => "doc"
            document_id => "%{id}"
        }
    }
    if[type] == "r_merchant_sport_order_month" {
        elasticsearch {
            hosts => "10.5.18.241:9200"
            index => "merchant_sport_order_month"
            document_type => "doc"
            document_id => "%{id}"
        }
    }
    if[type] == "r_merchant_sport_order_month_utc8" {
        elasticsearch {
            hosts => "10.5.18.241:9200"
            index => "merchant_sport_order_month_utc8"
            document_type => "doc"
            document_id => "%{id}"
        }
    }

    if[type] == "r_merchant_match_bet_info" {
        elasticsearch {
            hosts => "10.5.18.241:9200"
            index => "merchant_match_bet_info"
            document_type => "doc"
            document_id => "%{id}"
        }
    }
    if[type] == "r_merchant_market_bet_info" {
        elasticsearch {
            hosts => "10.5.18.241:9200"
            index => "merchant_market_bet_info"
            document_type => "doc"
            document_id => "%{id}"
        }
    }
	if[type] == "merge_ticket_es" {
		elasticsearch {
			hosts => "10.5.18.241:9200"
			index => "ticket_bet_info"
			document_type => "doc"
			document_id => "%{id}"
		}
	}
    if[type] == "merge_order_c" {
        jdbc {
            connection_string => "jdbc:mysql://10.5.11.80:6606/tybss_report?tinyInt1isBit=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
            username => "tybss_web"
            password => "A2Vox11@CznA2X%8LeXxqvCmy"
			driver_jar_path => "/usr/local/logstash/lib/mysql-connector-java-8.0.16.jar"
            driver_class => "com.mysql.cj.jdbc.Driver"
            statement => ["insert into t_ticket(merchant_name, merchant_code, uid, username, user_level, currency_code, order_no, create_time,
                                                                       modify_time, confirm_time, remark, order_amount_total, original_order_amount_total,
                                                                       product_amount_total, pre_bet_amount, original_pre_bet_amount, product_count, series_type,
                                                                       series_value, manager_code, ac_code, ip, ip_area, device_type, device_imei,
                                                                       order_status, pre_settle, vip_level, lang_code, max_win_amount, original_max_win_amount,
                                                                       settle_amount, profit_amount, original_profit_amount, original_settle_amount, settle_time,
                                                                       out_come, settle_type, settle_times,pre_order)
                                                  values (?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?,?,?,?)
                                                  on duplicate key update modify_time             = values(modify_time),
                                                                          pre_bet_amount          = values(pre_bet_amount),
                                                                          order_status            = values(order_status),
                                                                          settle_amount           = values(settle_amount),
                                                                          original_settle_amount  = values(original_settle_amount),
                                                                          profit_amount           = values(profit_amount),
                                                                          out_come                = values(out_come),
                                                                          settle_times            = values(settle_times),
                                                                          settle_type             = values(settle_type),
                                                                          pre_settle              = values(pre_settle),
                                                                          settle_time             = values(settle_time),
                                                                          remark                  = values(remark),
                                                                          original_profit_amount  = values(original_profit_amount),
                                                                          original_pre_bet_amount = values(original_pre_bet_amount)",
                                                                          "merchant_name", "merchant_code", "uid", "username", "user_level", "currency_code", "order_no", "create_time",
                                                                         "modify_time","confirm_time","remark","order_amount_total","original_order_amount_total","product_amount_total","pre_bet_amount","original_pre_bet_amount",
                                                                         "product_count","series_type","series_value","manager_code","ac_code","ip","ip_area","device_type","device_imei","order_status",
                                                                         "pre_settle","vip_level","lang_code","max_win_amount","original_max_win_amount","settle_amount","profit_amount","original_profit_amount","original_settle_amount"
                                                                         ,"settle_time" ,"out_come" ,"settle_type" ,"settle_times","pre_order"]
        }
    }

    if[type] == "merge_order_bak" {
        jdbc {
            connection_string => "jdbc:mysql://10.5.11.80:6606/tybss_report?tinyInt1isBit=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
            username => "tybss_web"
            password => "A2Vox11@CznA2X%8LeXxqvCmy"
			driver_jar_path => "/usr/local/logstash/lib/mysql-connector-java-8.0.16.jar"
            driver_class => "com.mysql.cj.jdbc.Driver"
            statement => ["insert into t_ticket(merchant_name, merchant_code, uid, username, user_level, currency_code, order_no, create_time,
                                                                       modify_time, confirm_time, remark, order_amount_total, original_order_amount_total,
                                                                       product_amount_total, pre_bet_amount, original_pre_bet_amount, product_count, series_type,
                                                                       series_value, manager_code, ac_code, ip, ip_area, device_type, device_imei,
                                                                       order_status, pre_settle, vip_level, lang_code, max_win_amount, original_max_win_amount,
                                                                       settle_amount, profit_amount, original_profit_amount, original_settle_amount, settle_time,
                                                                       out_come, settle_type, settle_times,pre_order)
                                                  values (?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?,?,?,?)
                                                  on duplicate key update modify_time             = values(modify_time),
                                                                          pre_bet_amount          = values(pre_bet_amount),
                                                                          order_status            = values(order_status),
                                                                          settle_amount           = values(settle_amount),
                                                                          original_settle_amount  = values(original_settle_amount),
                                                                          profit_amount           = values(profit_amount),
                                                                          out_come                = values(out_come),
                                                                          settle_times            = values(settle_times),
                                                                          settle_type             = values(settle_type),
                                                                          pre_settle              = values(pre_settle),
                                                                          settle_time             = values(settle_time),
                                                                          remark                  = values(remark),
                                                                          original_profit_amount  = values(original_profit_amount),
                                                                          original_pre_bet_amount = values(original_pre_bet_amount)",
                                                                          "merchant_name", "merchant_code", "uid", "username", "user_level", "currency_code", "order_no", "create_time",
                                                                         "modify_time","confirm_time","remark","order_amount_total","original_order_amount_total","product_amount_total","pre_bet_amount","original_pre_bet_amount",
                                                                         "product_count","series_type","series_value","manager_code","ac_code","ip","ip_area","device_type","device_imei","order_status",
                                                                         "pre_settle","vip_level","lang_code","max_win_amount","original_max_win_amount","settle_amount","profit_amount","original_profit_amount","original_settle_amount"
                                                                         ,"settle_time" ,"out_come" ,"settle_type" ,"settle_times","pre_order"]
        }
    }

    if[type] == "merge_order_detail" {
        jdbc {
            connection_string => "jdbc:mysql://10.5.11.80:6606/tybss_report?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
            username => "tybss_web"
            password => "A2Vox11@CznA2X%8LeXxqvCmy"
			driver_jar_path => "/usr/local/logstash/lib/mysql-connector-java-8.0.16.jar"
            driver_class => "com.mysql.cj.jdbc.Driver"
            statement => ["insert into t_ticket_detail(bet_no, order_no, uid, create_time, modify_time,original_bet_amount,bet_amount,begin_time, sport_id, sport_name,
                                                     sport_name_zs, sport_name_en, play_id, play_name, play_name_zs, play_name_en,
                                                     tournament_id, tournament_level, match_id, match_name, tournament_name_zs,
                                                     tournament_name_en, match_type, match_info, match_info_zs, match_info_en, home_name,
                                                     away_name, market_id, market_type,
                                                     market_value, play_options_id, play_options, play_option_name, playoption_zs, playoption_en,
                                                     odds_value, odd_finally, bet_status, bet_result, score_benchmark, remark, cancel_type,
                                                     settle_score, place_num, settle_times, cancel_time, risk_event,odds_data_sourse)
                         values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,
                                 ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                         on duplicate key update modify_time  = values(modify_time),
                                                 bet_status   = values(bet_status),
                                                 bet_result   = values(bet_result),
                                                 remark       = values(remark),
                                                 cancel_time  = values(cancel_time),
                                                 settle_times = values(settle_times),
                                                 settle_score = values(settle_score),
                                                 risk_event   = values(risk_event)",
                                         "bet_no","order_no","uid","create_time","modify_time","original_bet_amount","bet_amount","begin_time","sport_id","sport_name","sport_name_zs","sport_name_en",
                                         "play_id","play_name","play_name_zs","play_name_en","tournament_id","tournament_level","match_id","match_name","tournament_name_zs",
                                         "tournament_name_en", "match_type","match_info","match_info_zs","match_info_en","home_name","away_name","market_id","market_type",
                                         "market_value","play_options_id","play_options","play_option_name","playoption_zs","playoption_en","odds_value","odd_finally",
                                         "bet_status","bet_result","score_benchmark","remark","cancel_type","settle_score","place_num","settle_times","cancel_time","risk_event","odds_data_sourse"]
        }
    }

    if[type] == "merge_order_detail_c_bak" {
        jdbc {
            connection_string => "jdbc:mysql://10.5.11.80:6606/tybss_report?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
            username => "tybss_web"
            password => "A2Vox11@CznA2X%8LeXxqvCmy"
			driver_jar_path => "/usr/local/logstash/lib/mysql-connector-java-8.0.16.jar"
            driver_class => "com.mysql.cj.jdbc.Driver"
            statement => ["insert into t_ticket_detail(bet_no, order_no, uid, create_time, modify_time,original_bet_amount,bet_amount,begin_time, sport_id, sport_name,
                                                     sport_name_zs, sport_name_en, play_id, play_name, play_name_zs, play_name_en,
                                                     tournament_id, tournament_level, match_id, match_name, tournament_name_zs,
                                                     tournament_name_en, match_type, match_info, match_info_zs, match_info_en, home_name,
                                                     away_name, market_id, market_type,
                                                     market_value, play_options_id, play_options, play_option_name, playoption_zs, playoption_en,
                                                     odds_value, odd_finally, bet_status, bet_result, score_benchmark, remark, cancel_type,
                                                     settle_score, place_num, settle_times, cancel_time, risk_event,odds_data_sourse)
                         values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,
                                 ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                         on duplicate key update modify_time  = values(modify_time)",
                                         "bet_no","order_no","uid","create_time","modify_time","original_bet_amount","bet_amount","begin_time","sport_id","sport_name","sport_name_zs","sport_name_en",
                                         "play_id","play_name","play_name_zs","play_name_en","tournament_id","tournament_level","match_id","match_name","tournament_name_zs",
                                         "tournament_name_en", "match_type","match_info","match_info_zs","match_info_en","home_name","away_name","market_id","market_type",
                                         "market_value","play_options_id","play_options","play_option_name","playoption_zs","playoption_en","odds_value","odd_finally",
                                         "bet_status","bet_result","score_benchmark","remark","cancel_type","settle_score","place_num","settle_times","cancel_time","risk_event","odds_data_sourse"]
        }
    }

    if[type] == "merge_order_y" {
        jdbc {
            connection_string => "jdbc:mysql://10.5.11.80:6606/tybss_report?tinyInt1isBit=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
            username => "tybss_web"
            password => "A2Vox11@CznA2X%8LeXxqvCmy"
			driver_jar_path => "/usr/local/logstash/lib/mysql-connector-java-8.0.16.jar"
            driver_class => "com.mysql.cj.jdbc.Driver"
            statement => ["insert into t_ticket(merchant_name, merchant_code, uid, username, user_level, currency_code, order_no, create_time,
                                                                       modify_time, confirm_time, remark, order_amount_total, original_order_amount_total,
                                                                       product_amount_total, pre_bet_amount, original_pre_bet_amount, product_count, series_type,
                                                                       series_value, manager_code, ac_code, ip, ip_area, device_type, device_imei,
                                                                       order_status, pre_settle, vip_level, lang_code, max_win_amount, original_max_win_amount,
                                                                       settle_amount, profit_amount, original_profit_amount, original_settle_amount, settle_time,
                                                                       out_come, settle_type, settle_times,pre_order)
                                                  values (?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?,?,?,?)
                                                  on duplicate key update modify_time             = values(modify_time),
                                                                          pre_bet_amount          = values(pre_bet_amount),
                                                                          order_status            = values(order_status),
                                                                          settle_amount           = values(settle_amount),
                                                                          original_settle_amount  = values(original_settle_amount),
                                                                          profit_amount           = values(profit_amount),
                                                                          out_come                = values(out_come),
                                                                          settle_times            = values(settle_times),
                                                                          settle_type             = values(settle_type),
                                                                          pre_settle              = values(pre_settle),
                                                                          settle_time             = values(settle_time),
                                                                          remark                  = values(remark),
                                                                          original_profit_amount  = values(original_profit_amount),
                                                                          original_pre_bet_amount = values(original_pre_bet_amount)",
                                                                          "merchant_name", "merchant_code", "uid", "username", "user_level", "currency_code", "order_no", "create_time",
                                                                         "modify_time","confirm_time","remark","order_amount_total","original_order_amount_total","product_amount_total","pre_bet_amount","original_pre_bet_amount",
                                                                         "product_count","series_type","series_value","manager_code","ac_code","ip","ip_area","device_type","device_imei","order_status",
                                                                         "pre_settle","vip_level","lang_code","max_win_amount","original_max_win_amount","settle_amount","profit_amount","original_profit_amount","original_settle_amount"
                                                                         ,"settle_time" ,"out_come" ,"settle_type" ,"settle_times","pre_order"]
        }
    }
    if[type] == "merge_order_y_bak" {
        jdbc {
            connection_string => "jdbc:mysql://10.5.11.80:6606/tybss_report?tinyInt1isBit=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
            username => "tybss_web"
            password => "A2Vox11@CznA2X%8LeXxqvCmy"
			driver_jar_path => "/usr/local/logstash/lib/mysql-connector-java-8.0.16.jar"
            driver_class => "com.mysql.cj.jdbc.Driver"
            statement => ["insert into t_ticket(merchant_name, merchant_code, uid, username, user_level, currency_code, order_no, create_time,
                                                                       modify_time, confirm_time, remark, order_amount_total, original_order_amount_total,
                                                                       product_amount_total, pre_bet_amount, original_pre_bet_amount, product_count, series_type,
                                                                       series_value, manager_code, ac_code, ip, ip_area, device_type, device_imei,
                                                                       order_status, pre_settle, vip_level, lang_code, max_win_amount, original_max_win_amount,
                                                                       settle_amount, profit_amount, original_profit_amount, original_settle_amount, settle_time,
                                                                       out_come, settle_type, settle_times,pre_order)
                                                  values (?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?,?,?,?)
                                                  on duplicate key update modify_time             = values(modify_time),
                                                                          pre_bet_amount          = values(pre_bet_amount),
                                                                          order_status            = values(order_status),
                                                                          settle_amount           = values(settle_amount),
                                                                          original_settle_amount  = values(original_settle_amount),
                                                                          profit_amount           = values(profit_amount),
                                                                          out_come                = values(out_come),
                                                                          settle_times            = values(settle_times),
                                                                          settle_type             = values(settle_type),
                                                                          pre_settle              = values(pre_settle),
                                                                          settle_time             = values(settle_time),
                                                                          remark                  = values(remark),
                                                                          original_profit_amount  = values(original_profit_amount),
                                                                          original_pre_bet_amount = values(original_pre_bet_amount)",
                                                                          "merchant_name", "merchant_code", "uid", "username", "user_level", "currency_code", "order_no", "create_time",
                                                                         "modify_time","confirm_time","remark","order_amount_total","original_order_amount_total","product_amount_total","pre_bet_amount","original_pre_bet_amount",
                                                                         "product_count","series_type","series_value","manager_code","ac_code","ip","ip_area","device_type","device_imei","order_status",
                                                                         "pre_settle","vip_level","lang_code","max_win_amount","original_max_win_amount","settle_amount","profit_amount","original_profit_amount","original_settle_amount"
                                                                         ,"settle_time" ,"out_come" ,"settle_type" ,"settle_times","pre_order"]
        }
    }
    if[type] == "merge_order_detail_y" {
        jdbc {
            connection_string => "jdbc:mysql://10.5.11.80:6606/tybss_report?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
            username => "tybss_web"
            password => "A2Vox11@CznA2X%8LeXxqvCmy"
			driver_jar_path => "/usr/local/logstash/lib/mysql-connector-java-8.0.16.jar"
            driver_class => "com.mysql.cj.jdbc.Driver"
            statement => ["insert into t_ticket_detail(bet_no, order_no, uid, create_time, modify_time,original_bet_amount,bet_amount,begin_time, sport_id, sport_name,
                                                     sport_name_zs, sport_name_en, play_id, play_name, play_name_zs, play_name_en,
                                                     tournament_id, tournament_level, match_id, match_name, tournament_name_zs,
                                                     tournament_name_en, match_type, match_info, match_info_zs, match_info_en, home_name,
                                                     away_name, market_id, market_type,
                                                     market_value, play_options_id, play_options, play_option_name, playoption_zs, playoption_en,
                                                     odds_value, odd_finally, bet_status, bet_result, score_benchmark, remark, cancel_type,
                                                     settle_score, place_num, settle_times, cancel_time, risk_event,odds_data_sourse)
                         values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,
                                 ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?)
                         on duplicate key update modify_time  = values(modify_time),
                                                 bet_status   = values(bet_status),
                                                 bet_result   = values(bet_result),
                                                 remark       = values(remark),
                                                 cancel_time  = values(cancel_time),
                                                 settle_times = values(settle_times),
                                                 settle_score = values(settle_score),
                                                 risk_event   = values(risk_event)",
                                         "bet_no","order_no","uid","create_time","modify_time","original_bet_amount","bet_amount","begin_time","sport_id","sport_name","sport_name_zs","sport_name_en",
                                         "play_id","play_name","play_name_zs","play_name_en","tournament_id","tournament_level","match_id","match_name","tournament_name_zs",
                                         "tournament_name_en", "match_type","match_info","match_info_zs","match_info_en","home_name","away_name","market_id","market_type",
                                         "market_value","play_options_id","play_options","play_option_name","playoption_zs","playoption_en","odds_value","odd_finally",
                                         "bet_status","bet_result","score_benchmark","remark","cancel_type","settle_score","place_num","settle_times","cancel_time","risk_event","odds_data_sourse"]
        }
    }

    if[type] == "merge_order_detail_y_bak" {
        jdbc {
            connection_string => "jdbc:mysql://10.5.11.80:6606/tybss_report?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
            username => "tybss_web"
            password => "A2Vox11@CznA2X%8LeXxqvCmy"
			driver_jar_path => "/usr/local/logstash/lib/mysql-connector-java-8.0.16.jar"
            driver_class => "com.mysql.cj.jdbc.Driver"
            statement => ["insert into t_ticket_detail(bet_no, order_no, uid, create_time, modify_time,original_bet_amount,bet_amount,begin_time, sport_id, sport_name,
                                                     sport_name_zs, sport_name_en, play_id, play_name, play_name_zs, play_name_en,
                                                     tournament_id, tournament_level, match_id, match_name, tournament_name_zs,
                                                     tournament_name_en, match_type, match_info, match_info_zs, match_info_en, home_name,
                                                     away_name, market_id, market_type,
                                                     market_value, play_options_id, play_options, play_option_name, playoption_zs, playoption_en,
                                                     odds_value, odd_finally, bet_status, bet_result, score_benchmark, remark, cancel_type,
                                                     settle_score, place_num, settle_times, cancel_time, risk_event,odds_data_sourse)
                         values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,
                                 ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?)
                         on duplicate key update modify_time  = values(modify_time)",
                                         "bet_no","order_no","uid","create_time","modify_time","original_bet_amount","bet_amount","begin_time","sport_id","sport_name","sport_name_zs","sport_name_en",
                                         "play_id","play_name","play_name_zs","play_name_en","tournament_id","tournament_level","match_id","match_name","tournament_name_zs",
                                         "tournament_name_en", "match_type","match_info","match_info_zs","match_info_en","home_name","away_name","market_id","market_type",
                                         "market_value","play_options_id","play_options","play_option_name","playoption_zs","playoption_en","odds_value","odd_finally",
                                         "bet_status","bet_result","score_benchmark","remark","cancel_type","settle_score","place_num","settle_times","cancel_time","risk_event","odds_data_sourse"]
        }
    }

    if[type] == "merge_order_s" {
        jdbc {
            connection_string => "jdbc:mysql://10.5.11.80:6606/tybss_report?tinyInt1isBit=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
            username => "tybss_web"
            password => "A2Vox11@CznA2X%8LeXxqvCmy"
			driver_jar_path => "/usr/local/logstash/lib/mysql-connector-java-8.0.16.jar"
            driver_class => "com.mysql.cj.jdbc.Driver"
            statement => ["insert into t_ticket(merchant_name, merchant_code, uid, username, user_level, currency_code, order_no, create_time,
                                                                       modify_time, confirm_time, remark, order_amount_total, original_order_amount_total,
                                                                       product_amount_total, pre_bet_amount, original_pre_bet_amount, product_count, series_type,
                                                                       series_value, manager_code, ac_code, ip, ip_area, device_type, device_imei,
                                                                       order_status, pre_settle, vip_level, lang_code, max_win_amount, original_max_win_amount,
                                                                       settle_amount, profit_amount, original_profit_amount, original_settle_amount, settle_time,
                                                                       out_come, settle_type, settle_times,pre_order)
                                                  values (?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?,?,?,?)
                                                  on duplicate key update modify_time             = values(modify_time),
                                                                          pre_bet_amount          = values(pre_bet_amount),
                                                                          order_status            = values(order_status),
                                                                          settle_amount           = values(settle_amount),
                                                                          original_settle_amount  = values(original_settle_amount),
                                                                          profit_amount           = values(profit_amount),
                                                                          out_come                = values(out_come),
                                                                          settle_times            = values(settle_times),
                                                                          settle_type             = values(settle_type),
                                                                          pre_settle              = values(pre_settle),
                                                                          settle_time             = values(settle_time),
                                                                          remark                  = values(remark),
                                                                          original_profit_amount  = values(original_profit_amount),
                                                                          original_pre_bet_amount = values(original_pre_bet_amount)",
                                                                          "merchant_name", "merchant_code", "uid", "username", "user_level", "currency_code", "order_no", "create_time",
                                                                         "modify_time","confirm_time","remark","order_amount_total","original_order_amount_total","product_amount_total","pre_bet_amount","original_pre_bet_amount",
                                                                         "product_count","series_type","series_value","manager_code","ac_code","ip","ip_area","device_type","device_imei","order_status",
                                                                         "pre_settle","vip_level","lang_code","max_win_amount","original_max_win_amount","settle_amount","profit_amount","original_profit_amount","original_settle_amount"
                                                                         ,"settle_time" ,"out_come" ,"settle_type" ,"settle_times","pre_order"]
        }
    }
    if[type] == "merge_order_s_bak" {
        jdbc {
            connection_string => "jdbc:mysql://10.5.11.80:6606/tybss_report?tinyInt1isBit=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
            username => "tybss_web"
            password => "A2Vox11@CznA2X%8LeXxqvCmy"
			driver_jar_path => "/usr/local/logstash/lib/mysql-connector-java-8.0.16.jar"
            driver_class => "com.mysql.cj.jdbc.Driver"
            statement => ["insert into t_ticket(merchant_name, merchant_code, uid, username, user_level, currency_code, order_no, create_time,
                                                                       modify_time, confirm_time, remark, order_amount_total, original_order_amount_total,
                                                                       product_amount_total, pre_bet_amount, original_pre_bet_amount, product_count, series_type,
                                                                       series_value, manager_code, ac_code, ip, ip_area, device_type, device_imei,
                                                                       order_status, pre_settle, vip_level, lang_code, max_win_amount, original_max_win_amount,
                                                                       settle_amount, profit_amount, original_profit_amount, original_settle_amount, settle_time,
                                                                       out_come, settle_type, settle_times,pre_order)
                                                  values (?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?,?,?,?)
                                                  on duplicate key update modify_time             = values(modify_time),
                                                                          pre_bet_amount          = values(pre_bet_amount),
                                                                          order_status            = values(order_status),
                                                                          settle_amount           = values(settle_amount),
                                                                          original_settle_amount  = values(original_settle_amount),
                                                                          profit_amount           = values(profit_amount),
                                                                          out_come                = values(out_come),
                                                                          settle_times            = values(settle_times),
                                                                          settle_type             = values(settle_type),
                                                                          pre_settle              = values(pre_settle),
                                                                          settle_time             = values(settle_time),
                                                                          remark                  = values(remark),
                                                                          original_profit_amount  = values(original_profit_amount),
                                                                          original_pre_bet_amount = values(original_pre_bet_amount)",
                                                                          "merchant_name", "merchant_code", "uid", "username", "user_level", "currency_code", "order_no", "create_time",
                                                                         "modify_time","confirm_time","remark","order_amount_total","original_order_amount_total","product_amount_total","pre_bet_amount","original_pre_bet_amount",
                                                                         "product_count","series_type","series_value","manager_code","ac_code","ip","ip_area","device_type","device_imei","order_status",
                                                                         "pre_settle","vip_level","lang_code","max_win_amount","original_max_win_amount","settle_amount","profit_amount","original_profit_amount","original_settle_amount"
                                                                         ,"settle_time" ,"out_come" ,"settle_type" ,"settle_times","pre_order"]
        }
    }
    if[type] == "merge_order_detail_s" {
        jdbc {
            connection_string => "jdbc:mysql://10.5.11.80:6606/tybss_report?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
            username => "tybss_web"
            password => "A2Vox11@CznA2X%8LeXxqvCmy"
			driver_jar_path => "/usr/local/logstash/lib/mysql-connector-java-8.0.16.jar"
            driver_class => "com.mysql.cj.jdbc.Driver"
            statement => ["insert into t_ticket_detail(bet_no, order_no, uid, create_time, modify_time,original_bet_amount,bet_amount,begin_time, sport_id, sport_name,
                                                     sport_name_zs, sport_name_en, play_id, play_name, play_name_zs, play_name_en,
                                                     tournament_id, tournament_level, match_id, match_name, tournament_name_zs,
                                                     tournament_name_en, match_type, match_info, match_info_zs, match_info_en, home_name,
                                                     away_name, market_id, market_type,
                                                     market_value, play_options_id, play_options, play_option_name, playoption_zs, playoption_en,
                                                     odds_value, odd_finally, bet_status, bet_result, score_benchmark, remark, cancel_type,
                                                     settle_score, place_num, settle_times, cancel_time, risk_event,odds_data_sourse)
                         values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,
                                 ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                         on duplicate key update modify_time  = values(modify_time),
                                                 bet_status   = values(bet_status),
                                                 bet_result   = values(bet_result),
                                                 remark       = values(remark),
                                                 cancel_time  = values(cancel_time),
                                                 settle_times = values(settle_times),
                                                 settle_score = values(settle_score),
                                                 risk_event   = values(risk_event)",
                                         "bet_no","order_no","uid","create_time","modify_time","original_bet_amount","bet_amount","begin_time","sport_id","sport_name","sport_name_zs","sport_name_en",
                                         "play_id","play_name","play_name_zs","play_name_en","tournament_id","tournament_level","match_id","match_name","tournament_name_zs",
                                         "tournament_name_en", "match_type","match_info","match_info_zs","match_info_en","home_name","away_name","market_id","market_type",
                                         "market_value","play_options_id","play_options","play_option_name","playoption_zs","playoption_en","odds_value","odd_finally",
                                         "bet_status","bet_result","score_benchmark","remark","cancel_type","settle_score","place_num","settle_times","cancel_time","risk_event","odds_data_sourse"]
        }
    }

    if[type] == "merge_order_detail_s_bak" {
        jdbc {
            connection_string => "jdbc:mysql://10.5.11.80:6606/tybss_report?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
            username => "tybss_web"
            password => "A2Vox11@CznA2X%8LeXxqvCmy"
			driver_jar_path => "/usr/local/logstash/lib/mysql-connector-java-8.0.16.jar"
            driver_class => "com.mysql.cj.jdbc.Driver"
            statement => ["insert into t_ticket_detail(bet_no, order_no, uid, create_time, modify_time,original_bet_amount,bet_amount,begin_time, sport_id, sport_name,
                                                     sport_name_zs, sport_name_en, play_id, play_name, play_name_zs, play_name_en,
                                                     tournament_id, tournament_level, match_id, match_name, tournament_name_zs,
                                                     tournament_name_en, match_type, match_info, match_info_zs, match_info_en, home_name,
                                                     away_name, market_id, market_type,
                                                     market_value, play_options_id, play_options, play_option_name, playoption_zs, playoption_en,
                                                     odds_value, odd_finally, bet_status, bet_result, score_benchmark, remark, cancel_type,
                                                     settle_score, place_num, settle_times, cancel_time, risk_event,odds_data_sourse)
                         values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,
                                 ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                         on duplicate key update modify_time  = values(modify_time)",
                                         "bet_no","order_no","uid","create_time","modify_time","original_bet_amount","bet_amount","begin_time","sport_id","sport_name","sport_name_zs","sport_name_en",
                                         "play_id","play_name","play_name_zs","play_name_en","tournament_id","tournament_level","match_id","match_name","tournament_name_zs",
                                         "tournament_name_en", "match_type","match_info","match_info_zs","match_info_en","home_name","away_name","market_id","market_type",
                                         "market_value","play_options_id","play_options","play_option_name","playoption_zs","playoption_en","odds_value","odd_finally",
                                         "bet_status","bet_result","score_benchmark","remark","cancel_type","settle_score","place_num","settle_times","cancel_time","risk_event","odds_data_sourse"]
        }
    }

    if[type] == "merge_order_b" {
        jdbc {
            connection_string => "jdbc:mysql://10.5.11.80:6606/tybss_report?tinyInt1isBit=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
            username => "tybss_web"
            password => "A2Vox11@CznA2X%8LeXxqvCmy"
			driver_jar_path => "/usr/local/logstash/lib/mysql-connector-java-8.0.16.jar"
            driver_class => "com.mysql.cj.jdbc.Driver"
            statement => ["insert into t_ticket(merchant_name, merchant_code, uid, username, user_level, currency_code, order_no, create_time,
                                                                       modify_time, confirm_time, remark, order_amount_total, original_order_amount_total,
                                                                       product_amount_total, pre_bet_amount, original_pre_bet_amount, product_count, series_type,
                                                                       series_value, manager_code, ac_code, ip, ip_area, device_type, device_imei,
                                                                       order_status, pre_settle, vip_level, lang_code, max_win_amount, original_max_win_amount,
                                                                       settle_amount, profit_amount, original_profit_amount, original_settle_amount, settle_time,
                                                                       out_come, settle_type, settle_times,pre_order)
                                                  values (?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?,?,?,?)
                                                  on duplicate key update modify_time             = values(modify_time),
                                                                          pre_bet_amount          = values(pre_bet_amount),
                                                                          order_status            = values(order_status),
                                                                          settle_amount           = values(settle_amount),
                                                                          original_settle_amount  = values(original_settle_amount),
                                                                          profit_amount           = values(profit_amount),
                                                                          out_come                = values(out_come),
                                                                          settle_times            = values(settle_times),
                                                                          settle_type             = values(settle_type),
                                                                          pre_settle              = values(pre_settle),
                                                                          settle_time             = values(settle_time),
                                                                          remark                  = values(remark),
                                                                          original_profit_amount  = values(original_profit_amount),
                                                                          original_pre_bet_amount = values(original_pre_bet_amount)",
                                                                          "merchant_name", "merchant_code", "uid", "username", "user_level", "currency_code", "order_no", "create_time",
                                                                         "modify_time","confirm_time","remark","order_amount_total","original_order_amount_total","product_amount_total","pre_bet_amount","original_pre_bet_amount",
                                                                         "product_count","series_type","series_value","manager_code","ac_code","ip","ip_area","device_type","device_imei","order_status",
                                                                         "pre_settle","vip_level","lang_code","max_win_amount","original_max_win_amount","settle_amount","profit_amount","original_profit_amount","original_settle_amount"
                                                                         ,"settle_time" ,"out_come" ,"settle_type" ,"settle_times","pre_order"]
        }
    }
    if[type] == "merge_order_b_bak" {
        jdbc {
            connection_string => "jdbc:mysql://10.5.11.80:6606/tybss_report?tinyInt1isBit=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
            username => "tybss_web"
            password => "A2Vox11@CznA2X%8LeXxqvCmy"
			driver_jar_path => "/usr/local/logstash/lib/mysql-connector-java-8.0.16.jar"
            driver_class => "com.mysql.cj.jdbc.Driver"
            statement => ["insert into t_ticket(merchant_name, merchant_code, uid, username, user_level, currency_code, order_no, create_time,
                                                                       modify_time, confirm_time, remark, order_amount_total, original_order_amount_total,
                                                                       product_amount_total, pre_bet_amount, original_pre_bet_amount, product_count, series_type,
                                                                       series_value, manager_code, ac_code, ip, ip_area, device_type, device_imei,
                                                                       order_status, pre_settle, vip_level, lang_code, max_win_amount, original_max_win_amount,
                                                                       settle_amount, profit_amount, original_profit_amount, original_settle_amount, settle_time,
                                                                       out_come, settle_type, settle_times,pre_order)
                                                  values (?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?, ?, ?, ?,?,?,?,?)
                                                  on duplicate key update modify_time             = values(modify_time),
                                                                          pre_bet_amount          = values(pre_bet_amount),
                                                                          order_status            = values(order_status),
                                                                          settle_amount           = values(settle_amount),
                                                                          original_settle_amount  = values(original_settle_amount),
                                                                          profit_amount           = values(profit_amount),
                                                                          out_come                = values(out_come),
                                                                          settle_times            = values(settle_times),
                                                                          settle_type             = values(settle_type),
                                                                          pre_settle              = values(pre_settle),
                                                                          settle_time             = values(settle_time),
                                                                          remark                  = values(remark),
                                                                          original_profit_amount  = values(original_profit_amount),
                                                                          original_pre_bet_amount = values(original_pre_bet_amount)",
                                                                          "merchant_name", "merchant_code", "uid", "username", "user_level", "currency_code", "order_no", "create_time",
                                                                         "modify_time","confirm_time","remark","order_amount_total","original_order_amount_total","product_amount_total","pre_bet_amount","original_pre_bet_amount",
                                                                         "product_count","series_type","series_value","manager_code","ac_code","ip","ip_area","device_type","device_imei","order_status",
                                                                         "pre_settle","vip_level","lang_code","max_win_amount","original_max_win_amount","settle_amount","profit_amount","original_profit_amount","original_settle_amount"
                                                                         ,"settle_time" ,"out_come" ,"settle_type" ,"settle_times","pre_order"]
        }
    }
    if[type] == "merge_order_detail_b" {
        jdbc {
            connection_string => "jdbc:mysql://10.5.11.80:6606/tybss_report?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
            username => "tybss_web"
            password => "A2Vox11@CznA2X%8LeXxqvCmy"
			driver_jar_path => "/usr/local/logstash/lib/mysql-connector-java-8.0.16.jar"
            driver_class => "com.mysql.cj.jdbc.Driver"
            statement => ["insert into t_ticket_detail(bet_no, order_no, uid, create_time, modify_time,original_bet_amount,bet_amount,begin_time, sport_id, sport_name,
                                                     sport_name_zs, sport_name_en, play_id, play_name, play_name_zs, play_name_en,
                                                     tournament_id, tournament_level, match_id, match_name, tournament_name_zs,
                                                     tournament_name_en, match_type, match_info, match_info_zs, match_info_en, home_name,
                                                     away_name, market_id, market_type,
                                                     market_value, play_options_id, play_options, play_option_name, playoption_zs, playoption_en,
                                                     odds_value, odd_finally, bet_status, bet_result, score_benchmark, remark, cancel_type,
                                                     settle_score, place_num, settle_times, cancel_time, risk_event,odds_data_sourse)
                         values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,
                                 ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                         on duplicate key update modify_time  = values(modify_time),
                                                 bet_status   = values(bet_status),
                                                 bet_result   = values(bet_result),
                                                 remark       = values(remark),
                                                 cancel_time  = values(cancel_time),
                                                 settle_times = values(settle_times),
                                                 settle_score = values(settle_score),
                                                 risk_event   = values(risk_event)",
                                         "bet_no","order_no","uid","create_time","modify_time","original_bet_amount","bet_amount","begin_time","sport_id","sport_name","sport_name_zs","sport_name_en",
                                         "play_id","play_name","play_name_zs","play_name_en","tournament_id","tournament_level","match_id","match_name","tournament_name_zs",
                                         "tournament_name_en", "match_type","match_info","match_info_zs","match_info_en","home_name","away_name","market_id","market_type",
                                         "market_value","play_options_id","play_options","play_option_name","playoption_zs","playoption_en","odds_value","odd_finally",
                                         "bet_status","bet_result","score_benchmark","remark","cancel_type","settle_score","place_num","settle_times","cancel_time","risk_event","odds_data_sourse"]
        }
    }

    if[type] == "merge_order_detail_b_bak" {
        jdbc {
            connection_string => "jdbc:mysql://10.5.11.80:6606/tybss_report?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
            username => "tybss_web"
            password => "A2Vox11@CznA2X%8LeXxqvCmy"
			driver_jar_path => "/usr/local/logstash/lib/mysql-connector-java-8.0.16.jar"
            driver_class => "com.mysql.cj.jdbc.Driver"
            statement => ["insert into t_ticket_detail(bet_no, order_no, uid, create_time, modify_time,original_bet_amount,bet_amount,begin_time, sport_id, sport_name,
                                                     sport_name_zs, sport_name_en, play_id, play_name, play_name_zs, play_name_en,
                                                     tournament_id, tournament_level, match_id, match_name, tournament_name_zs,
                                                     tournament_name_en, match_type, match_info, match_info_zs, match_info_en, home_name,
                                                     away_name, market_id, market_type,
                                                     market_value, play_options_id, play_options, play_option_name, playoption_zs, playoption_en,
                                                     odds_value, odd_finally, bet_status, bet_result, score_benchmark, remark, cancel_type,
                                                     settle_score, place_num, settle_times, cancel_time, risk_event,odds_data_sourse)
                         values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,
                                 ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                         on duplicate key update modify_time  = values(modify_time)",
                                         "bet_no","order_no","uid","create_time","modify_time","original_bet_amount","bet_amount","begin_time","sport_id","sport_name","sport_name_zs","sport_name_en",
                                         "play_id","play_name","play_name_zs","play_name_en","tournament_id","tournament_level","match_id","match_name","tournament_name_zs",
                                         "tournament_name_en", "match_type","match_info","match_info_zs","match_info_en","home_name","away_name","market_id","market_type",
                                         "market_value","play_options_id","play_options","play_option_name","playoption_zs","playoption_en","odds_value","odd_finally",
                                         "bet_status","bet_result","score_benchmark","remark","cancel_type","settle_score","place_num","settle_times","cancel_time","risk_event","odds_data_sourse"]
        }
    }
    if[type] == "s_match_info" {
        jdbc {
            connection_string => "jdbc:mysql://10.5.11.80:6606/tybss_report?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
            username => "tybss_web"
            password => "A2Vox11@CznA2X%8LeXxqvCmy"
			driver_jar_path => "/usr/local/logstash/lib/mysql-connector-java-8.0.16.jar"
            driver_class => "com.mysql.cj.jdbc.Driver"
            statement => ["insert into t_match_info(id, sport_id, score, begin_time, match_over,modify_time)
                         values (?, ?, ?, ?, ?, ?)
                         on duplicate key update modify_time  = values(modify_time),
                                                 score   = values(score),
                                                 begin_time   = values(begin_time),
                                                 match_over       = values(match_over)",
                                         "id","sport_id","score","begin_time","match_over","modify_time"]
        }
    }
    if[type] == "s_virtual_match_info" {
        jdbc {
            connection_string => "jdbc:mysql://10.5.11.80:6606/tybss_report?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
            username => "tybss_web"
            password => "A2Vox11@CznA2X%8LeXxqvCmy"
			driver_jar_path => "/usr/local/logstash/lib/mysql-connector-java-8.0.16.jar"
            driver_class => "com.mysql.cj.jdbc.Driver"
            statement => ["insert into t_match_info(id, sport_id, score, begin_time, match_over,modify_time)
                         values (?, ?, ?, ?, ?, ?)
                         on duplicate key update modify_time  = values(modify_time),
                                                 score   = values(score),
                                                 begin_time   = values(begin_time),
                                                 match_over       = values(match_over)",
                                         "id","sport_id","score","begin_time","match_over","modify_time"]
        }
    }
    if[type] == "s_esports_match_info" {
        jdbc {
            connection_string => "jdbc:mysql://10.5.11.80:6606/tybss_report?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useAffectedRows=true"
            username => "tybss_web"
            password => "A2Vox11@CznA2X%8LeXxqvCmy"
			driver_jar_path => "/usr/local/logstash/lib/mysql-connector-java-8.0.16.jar"
            driver_class => "com.mysql.cj.jdbc.Driver"
            statement => ["insert into t_match_info(id, sport_id, score, begin_time, match_over,modify_time)
                         values (?, ?, ?, ?, ?, ?)
                         on duplicate key update modify_time  = values(modify_time),
                                                 score   = values(score),
                                                 begin_time   = values(begin_time),
                                                 match_over       = values(match_over)",
                                         "id","sport_id","score","begin_time","match_over","modify_time"]
        }
    }
    stdout {
        codec => json_lines
    }
}
